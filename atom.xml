<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Miij&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://caohziming.net/"/>
  <updated>2020-01-09T08:16:06.730Z</updated>
  <id>https://caohziming.net/</id>
  
  <author>
    <name>曹志明</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>haproxy 安装及主配参数详解</title>
    <link href="https://caohziming.net/post/9192.html"/>
    <id>https://caohziming.net/post/9192.html</id>
    <published>2020-01-09T08:09:43.207Z</published>
    <updated>2020-01-09T08:16:06.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="haproxy-入门与安装"><a href="#haproxy-入门与安装" class="headerlink" title="haproxy 入门与安装"></a>haproxy 入门与安装</h3><p>haproxy 是一款开源的负载均衡软件，他提供 L4 和 L7 层负载功能，全称为 high availability proxy。</p><h3 id="CentOS7-6-中使用-yum-安装使用-haproxy"><a href="#CentOS7-6-中使用-yum-安装使用-haproxy" class="headerlink" title="CentOS7.6 中使用 yum 安装使用 haproxy"></a>CentOS7.6 中使用 yum 安装使用 haproxy</h3><p>yum 安装haproxy 就不在赘述</p><h3 id="CentOS7-6-中源码编译安装-haproxy"><a href="#CentOS7-6-中源码编译安装-haproxy" class="headerlink" title="CentOS7.6 中源码编译安装 haproxy"></a>CentOS7.6 中源码编译安装 haproxy</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">1.yum install wget -y</span><br><span class="line">2.由于 haproxy 高版本依赖 lua5.3 以上的版本，因此编译安装 haproxy 之前，需要提前编译安装 lua</span><br><span class="line">wget http://www.lua.org/ftp/lua-5.3.5.tar.gz</span><br><span class="line"><span class="comment">#安装编译 lua 所依赖的软件包</span></span><br><span class="line">[root@haproxy ~]<span class="comment"># yum install libtermcap-devel ncurses-devel libevent-devel readline-devel gcc -y</span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># tar xf lua-5.3.5.tar.gz </span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># </span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># cd lua-5.3.5</span></span><br><span class="line">    [root@haproxy lua-5.3.5]<span class="comment"># make linux test</span></span><br><span class="line">3.<span class="comment">#安装haproxy所需开发包组</span></span><br><span class="line">[root@haproxy ~]<span class="comment"># yum install gcc gcc-c++ glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel net-tools iotop bc zip unzip zlib zlib-devel lsof ntpdate -y</span></span><br><span class="line"><span class="comment">#下载一下 haproxy 源码包，地址 </span></span><br><span class="line">wget http://www.haproxy.org/download/2.0/src/haproxy-2.0.4.tar.gz  </span><br><span class="line"><span class="comment"># 编译安装 haproxy</span></span><br><span class="line">    root@haproxy ~]<span class="comment"># tar xf haproxy-2.0.4.tar.gz </span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># </span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># cd haproxy-2.0.4</span></span><br><span class="line">    </span><br><span class="line">    root@haproxy haproxy-2.0.4]<span class="comment"># make ARCH=x86_64 TARGET=linux-glibc USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1 USE_SYSTEMD=1 USE_CPU_AFFINITY=1 USE_LUA=1 LUA_INC=/root/lua-5.3.5/src LUA_LIB=/root/lua-5.3.5/src PREFIX=/usr/local/haproxy </span></span><br><span class="line">    </span><br><span class="line">[root@haproxy haproxy-2.0.4]<span class="comment"># make install PREFIX=/usr/local/haproxy</span></span><br><span class="line"></span><br><span class="line">[root@haproxy haproxy-2.0.4]<span class="comment"># cp haproxy /usr/sbin/</span></span><br><span class="line"></span><br><span class="line">4. <span class="comment">#创建 haproxy 的 systemd 配置文件</span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># vim /usr/lib/systemd/system/haproxy.service</span></span><br><span class="line">    </span><br><span class="line">    [unit]</span><br><span class="line">    Description=HAProxy Load Balancer</span><br><span class="line">    After=syslog.target network.target</span><br><span class="line">    </span><br><span class="line">    [Service]</span><br><span class="line">    ExecStartPre=/usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg -c -q</span><br><span class="line">    ExecStart=/usr/sbin/haproxy -Ws -f /etc/haproxy/haproxy.cfg -p /var/lib/haproxy/haproxy.pid</span><br><span class="line">    ExecReload=/bin/<span class="built_in">kill</span> -USR2 <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">    [Install]</span><br><span class="line">    WantedBy=multi-user.target</span><br><span class="line">    [root@haproxy ~]<span class="comment"># </span></span><br><span class="line">    [root@haproxy ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">    [root@haproxy ~]<span class="comment">#</span></span><br><span class="line">5. <span class="comment">#创建 haproxy 服务的配置文件</span></span><br><span class="line">[root@haproxy ~]<span class="comment"># vim /etc/haproxy/haproxy.cfg</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line">global</span><br><span class="line">    <span class="built_in">log</span>         127.0.0.1 local2</span><br><span class="line">    chroot      /var/lib/haproxy</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">    user        haproxy  <span class="comment">#编译的haproxy可能没有user/group的id启动时会报错  需自己创建</span></span><br><span class="line">    group       haproxy  <span class="comment">#  groupadd haproxy</span></span><br><span class="line">   <span class="comment">#  useradd -g haproxy haproxy</span></span><br><span class="line">    daemon</span><br><span class="line">    stats socket /var/lib/haproxy/stats</span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line">defaults</span><br><span class="line">    mode                    http</span><br><span class="line">    <span class="built_in">log</span>                     global</span><br><span class="line">    option                  httplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option forwardfor       except 127.0.0.0/8</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 3</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           1m</span><br><span class="line">    timeout connect         10s</span><br><span class="line">    timeout client          1m</span><br><span class="line">    timeout server          1m</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line">    maxconn                 3000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line">listen webapps</span><br><span class="line">    <span class="built_in">bind</span> 192.168.66.7:80</span><br><span class="line">    mode tcp</span><br><span class="line">    <span class="built_in">log</span> global</span><br><span class="line">    balance static-rr</span><br><span class="line">   <span class="comment"># hash-type consistent</span></span><br><span class="line">    server web1 172.20.21.17:80  weight 2 check inter 3000 fall 2 rise 5</span><br><span class="line">    server web2 172.20.21.27:80 check inter 3000 fall 2 rise 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># web1/web2的根据自己服务器IP定</span></span><br><span class="line"></span><br><span class="line">6. [root@haproxy ~]<span class="comment"># systemctl restart haproxy.service </span></span><br><span class="line">[root@haproxy ~]<span class="comment"># ss -ntl</span></span><br><span class="line">State       Recv-Q Send-Q                                    Local Address:Port                                                   Peer Address:Port              </span><br><span class="line">LISTEN      0      50                                                    *:3306                                                              *:*                  </span><br><span class="line">LISTEN      0      128                                                   *:111                                                               *:*                  </span><br><span class="line">LISTEN      0      128                                        192.168.66.7:80                                                                *:*                  </span><br><span class="line">LISTEN      0      128                                                   *:6000                                                              *:*                  </span><br><span class="line">LISTEN      0      128                                                   *:22                                                                *:*                  </span><br><span class="line">LISTEN      0      128                                           127.0.0.1:631                                                               *:*                  </span><br><span class="line">LISTEN      0      100                                           127.0.0.1:25                                                                *:*                  </span><br><span class="line">LISTEN      0      128                                           127.0.0.1:6010                                                              *:*                  </span><br><span class="line">LISTEN      0      128                                           127.0.0.1:6011                                                              *:*                  </span><br><span class="line">LISTEN      0      128                                                  :::111                                                              :::*                  </span><br><span class="line">LISTEN      0      128                                                  :::6000                                                             :::*                  </span><br><span class="line">LISTEN      0      128                                                  :::22                                                               :::*                  </span><br><span class="line">LISTEN      0      128                                                 ::1:631                                                              :::*                  </span><br><span class="line">LISTEN      0      100                                                 ::1:25                                                               :::*                  </span><br><span class="line">LISTEN      0      128                                                 ::1:6010                                                             :::*                  </span><br><span class="line">LISTEN      0      128                                                 ::1:6011                                                             :::*                  </span><br><span class="line">[root@haproxy ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h3 id="haproxy-主要配置参数介绍"><a href="#haproxy-主要配置参数介绍" class="headerlink" title="haproxy 主要配置参数介绍"></a>haproxy 主要配置参数介绍</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>haproxy 的全局配置内容</span><br><span class="line"></span><br><span class="line">global  :             表示全局配置内容开始</span><br><span class="line">log     :             定义 rsyslog 配置</span><br><span class="line">chroot  :             锁定 haproxy 进程的运行目录</span><br><span class="line">pidfile :             指定 pid 文件存放路径</span><br><span class="line">maxconn :             指定进程的最大并发连接数</span><br><span class="line">user    :             指定进程的运行者身份</span><br><span class="line">group   :             指定进程的运行组身份</span><br><span class="line">daemon  :             指定进程以守护进程运行 </span><br><span class="line">nbproc  :             指定 haproxy 开启的进程数</span><br><span class="line">cpu-map :             1.8 版本以上的 haproxy 指定进程号和指定cpu绑定</span><br><span class="line">nbthread:             指定每个进程所开启的线程数，默认为 1 个</span><br><span class="line">spread-checks:        分散 tcp 健康监测，防止后台服务器数量过多，压力过大，建议 2-5</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>proxies 配置 haproxy 所代理的主机配置</span><br><span class="line">defaults                    :表示代理配置功能开始</span><br><span class="line">mode       http/tcp         :表示默认采用的代理模式, L4 或者 L7</span><br><span class="line">log        global           :日志配置</span><br><span class="line">option     dontlognull      :是否记录空连接日志</span><br><span class="line">option     http-server-close:开启 http 服务端主动关闭连接功能</span><br><span class="line">option     forwardfor       :开启 http 转发的 X-Forwarded-For 报文头功能</span><br><span class="line">option     redispatch       :当已建立的连接服务器宕机后，强制将用户请求调度到其他健康的服务器</span><br><span class="line">retries                     :连接失败后的重复尝试连接次数</span><br><span class="line">timeout http-request        :设置 http 请求最大请求时长</span><br><span class="line">timeout queue               :连接在等待队列中的最大时长</span><br><span class="line">timeout connect             :设置等待连接成功的最长时间</span><br><span class="line">timeout client              :设置客户端不活跃时间</span><br><span class="line">timeout server              :设置服务器端最大不活跃时间</span><br><span class="line">timeout http-keep-alive     :设置连接的 keepalive 时间</span><br><span class="line">timeout check               :设置已连接的连接检查</span><br><span class="line">maxconn                     :设置前端最大连接数量</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>listen 方式定义代理服务功能</span><br><span class="line">listen   :后面配置一个代理名称，配置区分大小写</span><br><span class="line">bind     :定义本个代理中 haproxy 对外监听的 ip 地址和端口</span><br><span class="line">server   :指定后端被代理的地址和健康监测配置</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>frontend 和 backend</span><br><span class="line">通过前后端分别定义的方式完成代理配置，建议使用上面的 listen 方式，比如：</span><br><span class="line">frontend web</span><br><span class="line"><span class="code">        bind 172.20.21.7:80</span></span><br><span class="line"><span class="code">        use_backend web_server</span></span><br><span class="line">backend web_server</span><br><span class="line"><span class="code">        server 172.20.21.17:80</span></span><br><span class="line"><span class="code">        server 172.20.21.27:80</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;haproxy-入门与安装&quot;&gt;&lt;a href=&quot;#haproxy-入门与安装&quot; class=&quot;headerlink&quot; title=&quot;haproxy 入门与安装&quot;&gt;&lt;/a&gt;haproxy 入门与安装&lt;/h3&gt;&lt;p&gt;haproxy 是一款开源的负载均衡软件，他提供 L
      
    
    </summary>
    
    
      <category term="Haproxy" scheme="https://caohziming.net/categories/Haproxy/"/>
    
    
      <category term="Haproxy" scheme="https://caohziming.net/tags/Haproxy/"/>
    
  </entry>
  
  <entry>
    <title>Nginx反向代理</title>
    <link href="https://caohziming.net/post/31787.html"/>
    <id>https://caohziming.net/post/31787.html</id>
    <published>2020-01-07T14:42:56.463Z</published>
    <updated>2020-01-07T14:57:40.269Z</updated>
    
    <content type="html"><![CDATA[<p>﻿## Nginx 的反向代理功能</p><p><strong>反向代理：反向代理也叫reverse proxy，指的是代理外网用户的请求到内部的指定web服务器，并将数据返回给用户的一种方式，这是用的比较多的一种方式。</strong></p><p><strong>Nginx除了可以在企业提供高性能的web服务之外，另外还可以将本身不具备的请求通过某种预定义的协议转发至其它服务器处理，不同的协议就是Nginx服务器与其他服务器进行通信的一种规范，主要在不同的场景使用以下模块实现不同的功能：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ngx_http_proxy_module： 将客户端的请求以http协议转发至指定服务器进行处理。</span><br><span class="line">ngx_stream_proxy_module：将客户端的请求以tcp协议转发至指定服务器处理。</span><br><span class="line">ngx_http_fastcgi_module：将客户端对php的请求以fastcgi协议转发至指定服务器助理。</span><br><span class="line">ngx_http_uwsgi_module：将客户端对Python的请求以uwsgi协议转发至指定服务器处理。</span><br></pre></td></tr></table></figure></div><p><strong>逻辑调用关系：</strong><br><a href="https://img-blog.csdnimg.cn/20200107174152141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200107174152141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload" title="在这里插入图片描述"></a></p><p><strong>生产环境部署结构：</strong></p><p>图片源于马哥教育教材<br><a href="https://img-blog.csdnimg.cn/20200107174156190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200107174156190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload" title="在这里插入图片描述"></a></p><h2 id="1-实现http反向代理"><a href="#1-实现http反向代理" class="headerlink" title="1 .实现http反向代理"></a>1 .实现http反向代理</h2><p>#要求：将用户对域 <a href="http://www.daming.net的请求转发值后端服务器处理，" target="_blank" rel="noopener">www.daming.net的请求转发值后端服务器处理，</a></p><p>#官方文档： <a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html，" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_proxy_module.html，</a></p><p><strong>环境准备：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.66.7   <span class="comment"># Nginx 代理服务器</span></span><br><span class="line">192.168.66.17  <span class="comment"># 后端web A，Apache部署</span></span><br><span class="line">192.168.66.27  <span class="comment"># 后端web B，Apache部署</span></span><br></pre></td></tr></table></figure></div><p><strong>访问逻辑图:</strong></p><p><a href="https://img-blog.csdnimg.cn/20200107174247691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20200107174247691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload" title="在这里插入图片描述"></a></p><h3 id="1-1：部署后端Apache服务器"><a href="#1-1：部署后端Apache服务器" class="headerlink" title="1.1：部署后端Apache服务器"></a>1.1：部署后端Apache服务器</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@s3 ~]<span class="comment"># yum install httpd -y</span></span><br><span class="line">[root@s3 ~]<span class="comment"># echo "web1 192.168.66.17" &gt; /var/www/html/index.html</span></span><br><span class="line">[root@s3 ~]<span class="comment"># systemctl start httpd &amp;&amp; systemctl enable httpd</span></span><br><span class="line">[root@s4 ~]<span class="comment"># yum install httpd -y</span></span><br><span class="line">[root@s4 ~]<span class="comment"># echo "web2 192.168.66.27" &gt;&gt; /var/www/html/index.html</span></span><br><span class="line">[root@s4 ~]<span class="comment"># systemctl start httpd &amp;&amp; systemctl enable httpd</span></span><br><span class="line"><span class="comment">#访问测试</span></span><br><span class="line">[root@s4 ~]<span class="comment"># curl http://192.168.66.17</span></span><br><span class="line">web1 192.168.66.17</span><br><span class="line">[root@s3 ~]<span class="comment"># curl http://192.168.66.27</span></span><br><span class="line">web2 192.168.66.27</span><br></pre></td></tr></table></figure></div><h3 id="1-2-Nginx-http-反向代理入门"><a href="#1-2-Nginx-http-反向代理入门" class="headerlink" title="1.2 Nginx http 反向代理入门"></a>1.2 Nginx http 反向代理入门</h3><p>#参看官方文档：<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass</a></p><h4 id="1-2-1-反向代理配置参数"><a href="#1-2-1-反向代理配置参数" class="headerlink" title="1.2.1 反向代理配置参数"></a>1.2.1 反向代理配置参数</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass；</span><br><span class="line"><span class="comment">#用来设置将客户端请求转发给的后端服务器的主机，可以是主机名、IP地址：端口的方式，也可以代理到预先设置的</span></span><br><span class="line">主机群组，需要模块gx_http_upstream_module支持。</span><br><span class="line">location /web &#123;</span><br><span class="line"> index index.html;</span><br><span class="line"> proxy_pass http://192.168.66.17:80;</span><br><span class="line">  <span class="comment">#不带斜线将访问的/web,等于访问后端服务器 http://192.168.66.17:80/web/index.html，即后端服务器配置的站点根目录要有web目录才可以被访问，这是一个追加/web到后端服务器</span></span><br><span class="line">http://servername:port/WEB/INDEX.HTML的操作</span><br><span class="line"> proxy_pass http://192.168.66.17:80/;</span><br><span class="line">  <span class="comment">#带斜线，等于访问后端服务器的http://192.168.66.17:80/index.html 内容返回给客户端</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启Nginx测试访问效果：</span></span><br><span class="line"><span class="comment"># curl -L http://www.daming.net/web/index.html</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">proxy_hide_header field;</span><br><span class="line"><span class="comment">#用于nginx作为反向代理的时候，在返回给客户端http响应的时候，隐藏后端服务版本相应头部的信息，可以设置在</span></span><br><span class="line">http/server或location块，</span><br><span class="line">location /web &#123;</span><br><span class="line"> index index.html;</span><br><span class="line"> proxy_pass http://192.168.66.17:80/;</span><br><span class="line"> proxy_hide_header ETag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass_header field;</span><br><span class="line"><span class="comment">#默认nginx在响应报文中不传递后端服务器的首部字段Date, Server, X-Pad, X-Accel等参数，如果要传递的</span></span><br><span class="line">话则要使用 proxy_pass_header field声明将后端服务器返回的值传递给客户端。</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass_request_body on | off；</span><br><span class="line"><span class="comment">#是否向后端服务器发送HTTP包体部分,可以设置在http/server或location块，默认即为开启</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass_request_headers on | off；</span><br><span class="line"><span class="comment">#是否将客户端的请求头部转发给后端服务器，可以设置在http/server或location块，默认即为开启</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header；</span><br><span class="line"><span class="comment">#可以更改或添加客户端的请求头部信息内容并转发至后端服务器，比如在后端服务器想要获取客户端的真实IP的时</span></span><br><span class="line">候，就要更改每一个报文的头部，如下：</span><br><span class="line"><span class="comment">#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span><br><span class="line">proxy_set_header X-Forwarded-For  <span class="variable">$remote_addr</span>; </span><br><span class="line"><span class="comment">#添加HOST到报文头部，如果客户端为NAT上网那么其值为客户端的共用的公网IP地址，常用于在日之中记录客户端的真实IP地址。</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxy_connect_timeout time；</span><br><span class="line"><span class="comment">#配置nginx服务器与后端服务器尝试建立连接的超时时间，默认为60秒，用法如下：</span></span><br><span class="line">proxy_connect_timeout 60s；</span><br><span class="line"><span class="comment">#60s为自定义nginx与后端服务器建立连接的超时时间</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxy_read_time time；</span><br><span class="line"><span class="comment">#配置nginx服务器向后端服务器或服务器组发起read请求后，等待的超时时间，默认60s</span></span><br><span class="line">proxy_send_time time；</span><br><span class="line"><span class="comment">#配置nginx项后端服务器或服务器组发起write请求后，等待的超时时间，默认60s</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_http_version 1.0；</span><br><span class="line"><span class="comment">#用于设置nginx提供代理服务的HTTP协议的版本，默认http 1.0</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxy_ignore_client_abort off；</span><br><span class="line"><span class="comment">#当客户端网络中断请求时，nginx服务器中断其对后端服务器的请求。即如果此项设置为on开启，则服务器会忽略客</span></span><br><span class="line">户端中断并一直等着代理服务执行返回，如果设置为off，则客户端中断后Nginx也会中断客户端请求并立即记录499日</span><br><span class="line">志，默认为off</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">proxy_headers_hash_bucket_size 128；</span><br><span class="line"><span class="comment">#当配置了 proxy_hide_header和proxy_set_header的时候，用于设置nginx保存HTTP报文头的hash表的上</span></span><br><span class="line">限。</span><br><span class="line">proxy_headers_hash_max_size 512；</span><br><span class="line"><span class="comment">#设置proxy_headers_hash_bucket_size的最大可用空间</span></span><br><span class="line">server_namse_hash_bucket_size 512;</span><br><span class="line"><span class="comment">#server_name hash表申请空间大小</span></span><br><span class="line">server_names_hash_max_szie  512;</span><br><span class="line"><span class="comment">#设置服务器名称hash表的上限大小</span></span><br></pre></td></tr></table></figure></div><h4 id="1-2-2-反向代理示例–单台web服务器"><a href="#1-2-2-反向代理示例–单台web服务器" class="headerlink" title="1.2.2 反向代理示例–单台web服务器"></a>1.2.2 反向代理示例–单台web服务器</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@s2 conf.d]<span class="comment"># cat pc.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.daming.net;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"> proxy_pass http://192.168.66.17:80/;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启Nginx 并访问测试</span></span><br></pre></td></tr></table></figure></div><h4 id="1-2-3-反向代理示例–指定location"><a href="#1-2-3-反向代理示例–指定location" class="headerlink" title="1.2.3 反向代理示例–指定location"></a>1.2.3 反向代理示例–指定location</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.daming.net;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">index index.html index.php;</span><br><span class="line"> root /data/nginx/html/pc;</span><br><span class="line"> &#125;</span><br><span class="line">location /web &#123;</span><br><span class="line"> <span class="comment">#proxy_pass http://192.168.66.17:80/; #注意有后面的/，</span></span><br><span class="line"> proxy_pass http://192.168.66.27:80/;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#后端web服务器必须要有相对于的访问URL</span></span><br><span class="line">[root@s3 ~]<span class="comment"># mkdir /var/www/html/web</span></span><br><span class="line">[root@s3 ~]<span class="comment"># echo "web1 page for apache" &gt; /var/www/html/web/index.html</span></span><br><span class="line">[root@s4 ~]<span class="comment"># mkdir /var/www/html/web</span></span><br><span class="line">[root@s4 ~]<span class="comment"># echo "web2 page for apache" &gt; /var/www/html/web/index.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启Nginx并访问测试：</span></span><br><span class="line">[root@s2 ~]<span class="comment"># curl -L http://www.daming.net/</span></span><br><span class="line">pc web</span><br><span class="line">[root@s2 ~]<span class="comment"># curl -L http://www.daming.net/web</span></span><br><span class="line">web2 page <span class="keyword">for</span> apache</span><br><span class="line"><span class="comment">#Apache的访问日志：</span></span><br><span class="line">[root@s4 ~]<span class="comment"># tail -f /var/log/httpd/access_log</span></span><br><span class="line">192.168.66.7 - - [04/Mar/2019:18:52:00 +0800] <span class="string">"GET /web/ HTTP/1.1"</span> 200 21 <span class="string">"-"</span></span><br><span class="line"><span class="string">"curl/7.29.0"</span></span><br><span class="line">192.168.66.7 - - [04/Mar/2019:18:52:00 +0800] <span class="string">"GET /web HTTP/1.0"</span> 301 233 <span class="string">"-"</span></span><br><span class="line"><span class="string">"curl/7.29.0"</span></span><br><span class="line">192.168.66.7 - - [04/Mar/2019:18:52:00 +0800] <span class="string">"GET /web/ HTTP/1.1"</span> 200 21 <span class="string">"-"</span></span><br><span class="line"><span class="string">"curl/7.29.0"</span></span><br></pre></td></tr></table></figure></div><h4 id="1-2-4-反向代理示例–缓存功能"><a href="#1-2-4-反向代理示例–缓存功能" class="headerlink" title="1.2.4 反向代理示例–缓存功能"></a>1.2.4 反向代理示例–缓存功能</h4><p><strong>缓存功能默认关闭状态</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache zone | off; 默认off</span><br><span class="line"><span class="section">#指明调用的缓存，或关闭缓存机制；Context:http, server, location</span></span><br><span class="line"></span><br><span class="line">proxy<span class="emphasis">_cache_</span>key string;</span><br><span class="line"><span class="section">#缓存中用于“键”的内容，默认值：proxy_cache_key $scheme$proxy_host$request_uri;</span></span><br><span class="line"></span><br><span class="line">proxy<span class="emphasis">_cache_</span>valid [code ...] time;</span><br><span class="line"><span class="section">#定义对特定响应码的响应内容的缓存时长，定义在http&#123;...&#125;中</span></span><br><span class="line">示例:</span><br><span class="line"><span class="code">proxy_cache_valid 200 302 10m;</span></span><br><span class="line"><span class="code">proxy_cache_valid 404 1m;</span></span><br><span class="line"></span><br><span class="line">proxy<span class="emphasis">_cache_</span>path; #查看官方文档最为准确</span><br><span class="line">定义可用于proxy功能的缓存；Context:http</span><br><span class="line">proxy<span class="emphasis">_cache_</span>path path [levels=levels] [use<span class="emphasis">_temp_</span>path=on|off] keys_zone=name:size</span><br><span class="line">[inactive=time] [max<span class="emphasis">_size=size] [manager_</span>files=number] [manager_sleep=time]</span><br><span class="line">[manager<span class="emphasis">_threshold=time] [loader_</span>files=number] [loader_sleep=time]</span><br><span class="line">[loader<span class="emphasis">_threshold=time] [purger=on|off] [purger_</span>files=number] [purger_sleep=time]</span><br><span class="line">[purger_threshold=time];</span><br><span class="line"><span class="strong">**示例：在http配置定义缓存信息**</span></span><br><span class="line"> proxy<span class="emphasis">_cache_</span>path /var/cache/nginx/proxy<span class="emphasis">_cache #定义缓存保存路径，proxy_</span>cache会自动创建</span><br><span class="line"> levels=1:2:2 #定义缓存目录结构层次，1:2:2可以生成2^4x2^8x2^8=1048576个目录</span><br><span class="line"> keys_zone=proxycache:20m #指内存中缓存的大小，主要用于存放key和metadata（如：使用次数） </span><br><span class="line"> inactive=120s； #缓存有效时间 </span><br><span class="line"> max_size=1g; #最大磁盘占用空间，磁盘存入文件内容的缓存空间最大值</span><br><span class="line"></span><br><span class="line"><span class="section">#调用缓存功能，需要定义在相应的配置段，如server&#123;...&#125;；或者location等</span></span><br><span class="line">   proxy_cache proxycache;</span><br><span class="line">   proxy<span class="emphasis">_cache_</span>key $request_uri;</span><br><span class="line">   proxy<span class="emphasis">_cache_</span>valid 200 302 301 10m; #指定的状态码返回的数据缓存多长时间</span><br><span class="line">   proxy<span class="emphasis">_cache_</span>valid any 1m;</span><br><span class="line"></span><br><span class="line">proxy<span class="emphasis">_cache_</span>use<span class="emphasis">_stale error http_</span>502 http_503;</span><br><span class="line"><span class="section">#在被代理的后端服务器出现哪种情况下，可直接使用过期的缓存响应客户端，</span></span><br><span class="line">proxy<span class="emphasis">_cache_</span>use<span class="emphasis">_stale error | timeout | invalid_</span>header | updating | http<span class="emphasis">_500 | http_</span>502</span><br><span class="line">| http<span class="emphasis">_503 | http_</span>504 | http<span class="emphasis">_403 | http_</span>404 | off ; #默认是off</span><br><span class="line"></span><br><span class="line">proxy<span class="emphasis">_cache_</span>methods GET | HEAD | POST ...;</span><br><span class="line"><span class="section">#对哪些客户端请求方法对应的响应进行缓存，GET和HEAD方法总是被缓存</span></span><br></pre></td></tr></table></figure></div><h4 id="1-2-5：添加头部报文信息"><a href="#1-2-5：添加头部报文信息" class="headerlink" title="1.2.5：添加头部报文信息"></a>1.2.5：添加头部报文信息</h4><p><strong>nginx基于模块ngx_http_headers_module可以实现对头部报文添加指定的key与值</strong></p><p>#参考文档： <a href="https://nginx.org/en/docs/http/ngx_http_headers_module.html" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_headers_module.html</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Syntax: add_header name value [always];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, <span class="keyword">if</span> <span class="keyword">in</span> location</span><br><span class="line"><span class="comment">#添加自定义首部，如下：</span></span><br><span class="line">add_header name value [always];</span><br><span class="line">add_header X-Via  <span class="variable">$server_addr</span>;</span><br><span class="line">add_header X-Cache <span class="variable">$upstream_cache_status</span>;</span><br><span class="line">add_header X-Accel <span class="variable">$server_name</span>;</span><br><span class="line"><span class="comment">#添加自定义响应信息的尾部， 1.13.2版后支持</span></span><br><span class="line">add_trailer name value [always];</span><br></pre></td></tr></table></figure></div><ul><li><strong>Nginx配置</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location /web &#123;</span><br><span class="line"> proxy_pass http://192.168.66.17:80/;</span><br><span class="line"> proxy_set_header clientip <span class="variable">$remote_addr</span>;</span><br><span class="line"> proxy_cache proxycache;</span><br><span class="line"> proxy_cache_key <span class="variable">$request_uri</span>;</span><br><span class="line"> proxy_cache_valid 200 302 301 1h;</span><br><span class="line"> proxy_cache_valid any 1m;</span><br><span class="line"> add_header X-Via  <span class="variable">$server_addr</span>;</span><br><span class="line"> add_header X-Cache <span class="variable">$upstream_cache_status</span>;</span><br><span class="line"> add_header X-Accel <span class="variable">$server_name</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>验证头部信息：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]<span class="comment"># curl -v 127.0.0.1/app1/</span></span><br><span class="line">* About to connect() to 127.0.0.1 port 80 (<span class="comment">#0)</span></span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* Connected to 127.0.0.1 (127.0.0.1) port 80 (<span class="comment">#0)</span></span><br><span class="line">&gt; GET /app1/ HTTP/1.1</span><br><span class="line">&gt; User-Agent: curl/7.29.0</span><br><span class="line">&gt; Host: 127.0.0.1</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Server: nginx/1.16.1</span><br><span class="line">&lt; Date: Tue, 07 Jan 2020 08:56:28 GMT</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; Content-Length: 29</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Last-Modified: Tue, 07 Jan 2020 07:05:23 GMT</span><br><span class="line">&lt; ETag: <span class="string">"1d-59b87665f5400"</span></span><br><span class="line">&lt; X-Via: 127.0.0.1</span><br><span class="line">&lt; X-Cache: MISS    <span class="comment">#----&gt;第一次访问没有缓存</span></span><br><span class="line">&lt; X-Accel: www.daming.net</span><br><span class="line">&lt; Accept-Ranges: bytes</span><br><span class="line">&lt; </span><br><span class="line">app1 web page by web1 server</span><br><span class="line">* Connection <span class="comment">#0 to host 127.0.0.1 left intact</span></span><br><span class="line">[root@nginx ~]<span class="comment"># tree /apps/nginx/proxycache/</span></span><br><span class="line">/apps/nginx/proxycache/</span><br><span class="line">└── b</span><br><span class="line">    └── 27</span><br><span class="line">        └── 73</span><br><span class="line">            └── 45efea0da7a0718cc36ddeda8747327b</span><br><span class="line"></span><br><span class="line">3 directories, 1 file</span><br><span class="line">[root@nginx ~]<span class="comment"># curl -v 127.0.0.1/app1/</span></span><br><span class="line">* About to connect() to 127.0.0.1 port 80 (<span class="comment">#0)</span></span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* Connected to 127.0.0.1 (127.0.0.1) port 80 (<span class="comment">#0)</span></span><br><span class="line">&gt; GET /app1/ HTTP/1.1</span><br><span class="line">&gt; User-Agent: curl/7.29.0</span><br><span class="line">&gt; Host: 127.0.0.1</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 200 OK</span><br><span class="line">&lt; Server: nginx/1.16.1</span><br><span class="line">&lt; Date: Tue, 07 Jan 2020 08:57:04 GMT</span><br><span class="line">&lt; Content-Type: text/html; charset=UTF-8</span><br><span class="line">&lt; Content-Length: 29</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Last-Modified: Tue, 07 Jan 2020 07:05:23 GMT</span><br><span class="line">&lt; ETag: <span class="string">"1d-59b87665f5400"</span></span><br><span class="line">&lt; X-Via: 127.0.0.1</span><br><span class="line">&lt; X-Cache: HIT  <span class="comment">#第二次缓存命中</span></span><br><span class="line">&lt; X-Accel: www.daming.net</span><br><span class="line">&lt; Accept-Ranges: bytes</span><br><span class="line">&lt; </span><br><span class="line">app1 web page by web1 server</span><br><span class="line">* Connection <span class="comment">#0 to host 127.0.0.1 left intact</span></span><br></pre></td></tr></table></figure></div><h2 id="2-Nginx-http-反向代理高级应用"><a href="#2-Nginx-http-反向代理高级应用" class="headerlink" title="2. Nginx http 反向代理高级应用"></a>2. Nginx http 反向代理高级应用</h2><p><strong>在上一个章节中Nginx可以将客户端的请求转发至单台后端服务器但是无法转发至特定的一组的服务器，而且不能对后端服务器提供相应的服务器状态监测，但是Nginx可以基于ngx_http_upstream_module模块提供服务器分组转发、权重分配、状态监测、调度算法等高级功能</strong></p><ul><li>#官方文档：<br>   #<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_upstream_module.html</a></li></ul><h3 id="2-1-http-upstream配置参数"><a href="#2-1-http-upstream配置参数" class="headerlink" title="2.1 http upstream配置参数"></a>2.1 http upstream配置参数</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upstream name &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#自定义一组服务器，配置在http内</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server address [parameters];</span><br><span class="line"><span class="comment">#配置一个后端web服务器，配置在upstream内，至少要有一个server服务器配置。</span></span><br><span class="line"><span class="comment">#server支持的parameters如下：</span></span><br><span class="line">weight=number <span class="comment">#设置权重，默认为1。</span></span><br><span class="line">max_conns=number  <span class="comment">#给当前server设置最大活动链接数，默认为0表示没有限制。</span></span><br><span class="line">max_fails=number  <span class="comment">#对后端服务器连续监测失败多少次就标记为不可用。</span></span><br><span class="line">fail_timeout=time <span class="comment">#对后端服务器的单次监测超时时间，默认为10秒。</span></span><br><span class="line">backup  <span class="comment">#设置为备份服务器，当所有服务器不可用时将重新启用次服务器。</span></span><br><span class="line">down   <span class="comment">#标记为down状态。</span></span><br><span class="line">resolve <span class="comment">#当server定义的是主机名的时候，当A记录发生变化会自动应用新IP而不用重启Nginx。</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">hash</span> KEY consistent；</span><br><span class="line"><span class="comment">#基于指定key做hash计算，使用consistent参数，将使用ketama一致性hash算法，适用于后端是Cache服务器</span></span><br><span class="line">（如varnish）时使用，consistent定义使用一致性<span class="built_in">hash</span>运算，一致性<span class="built_in">hash</span>基于取模运算。</span><br><span class="line"><span class="built_in">hash</span> <span class="variable">$request_uri</span> consistent; <span class="comment">#基于用户请求的uri做hash</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip_hash；</span><br><span class="line"><span class="comment">#源地址hash调度方法，基于的客户端的remote_addr(源地址)做hash计算，以实现会话保持</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">least_conn;</span><br><span class="line"><span class="comment">#最少连接调度算法，优先将客户端请求调度到当前连接最少的后端服务器</span></span><br></pre></td></tr></table></figure></div><h4 id="2-1-1-反向代理示例–多台web服务器"><a href="#2-1-1-反向代理示例–多台web服务器" class="headerlink" title="2.1.1 反向代理示例–多台web服务器"></a>2.1.1 反向代理示例–多台web服务器</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">upstream webserver &#123;</span><br><span class="line"> <span class="comment">#hash $request_uri consistent;</span></span><br><span class="line"> <span class="comment">#ip_hash；</span></span><br><span class="line"> <span class="comment">#least_conn;</span></span><br><span class="line">server 192.168.66.17:80 weight=1 fail_timeout=5s max_fails=3; <span class="comment">#后端服务器状态监测</span></span><br><span class="line">server 192.168.66.27:80 weight=1 fail_timeout=5s max_fails=3;</span><br><span class="line">server  192.168.66.7:80 weight=1 fail_timeout=5s max_fails=3 backup;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.daming.net;</span><br><span class="line">location / &#123;</span><br><span class="line"> index index.html index.php;</span><br><span class="line"> root /data/nginx/html/pc;</span><br><span class="line"> &#125;</span><br><span class="line">location /web &#123;</span><br><span class="line"> index index.html;</span><br><span class="line"> proxy_pass http://webserver/;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启Nginx 并访问测试</span></span><br><span class="line"></span><br><span class="line">[root@s2 ~]<span class="comment"># curl  http://www.daming.net/web</span></span><br><span class="line">web1 192.168.66.17</span><br><span class="line">[root@s2 ~]<span class="comment"># curl http://www.daming.net/web</span></span><br><span class="line">web2 192.168.66.27</span><br></pre></td></tr></table></figure></div><p><strong>关闭192.168.66.17和192.168.66.27，测试nginx backup服务器可用性</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@s4 ~]<span class="comment"># while true;do curl http://www.daming.net/web;sleep 1;done</span></span><br><span class="line"><span class="comment"># 测试轮询？</span></span><br></pre></td></tr></table></figure></div><h4 id="2-1-2-反向代理示例–客户端IP透传"><a href="#2-1-2-反向代理示例–客户端IP透传" class="headerlink" title="2.1.2 反向代理示例–客户端IP透传"></a>2.1.2 反向代理示例–客户端IP透传</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@s2 conf.d]<span class="comment"># cat pc.conf</span></span><br><span class="line">upstream webserver &#123;</span><br><span class="line"> <span class="comment">#hash $request_uri consistent; #consistent 一致性hash算法</span></span><br><span class="line"> <span class="comment">#server 192.168.7.103:80 weight=1 fail_timeout=5s max_fails=3;</span></span><br><span class="line">server 192.168.66.27:80 weight=1 fail_timeout=5s max_fails=3;</span><br><span class="line">server  192.168.66.7:80 weight=1 fail_timeout=5s max_fails=3 backup;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name www.daming.net;</span><br><span class="line">location / &#123;</span><br><span class="line"> index index.html index.php;</span><br><span class="line"> root /data/nginx/html/pc;</span><br><span class="line"> &#125;</span><br><span class="line">location /web &#123;</span><br><span class="line"> index index.html;</span><br><span class="line">  proxy_pass http://webserver/;</span><br><span class="line">  proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>; <span class="comment">#添加客户端IP到报文头部</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#重启nginx</span></span><br><span class="line"><span class="comment">#后端web服务器配置</span></span><br><span class="line">1、Apache：</span><br><span class="line">[root@s4 ~]<span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">LogFormat <span class="string">"%&#123;X-Forwarded-For&#125;i %h %l %u %t \"%r\" %&gt;s %b \"%&#123;Referer&#125;i\" \"%&#123;User-</span></span><br><span class="line"><span class="string">Agent&#125;i\""</span> combined</span><br><span class="line"><span class="comment">#重启apache访问web界面并验证apache日志</span></span><br><span class="line"></span><br><span class="line">2、Nginx：</span><br><span class="line">[root@s1 conf.d]<span class="comment"># cat /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="string">"<span class="variable">$http_x_forwarded_for</span>"</span><span class="string">' #默认日志格式就有此配置</span></span><br><span class="line"><span class="string">重启nginx访问web界面并验证日志格式</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;﻿## Nginx 的反向代理功能&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;反向代理：反向代理也叫reverse proxy，指的是代理外网用户的请求到内部的指定web服务器，并将数据返回给用户的一种方式，这是用的比较多的一种方式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;N
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx Rewrite</title>
    <link href="https://caohziming.net/post/48525.html"/>
    <id>https://caohziming.net/post/48525.html</id>
    <published>2020-01-07T05:45:03.115Z</published>
    <updated>2020-01-07T06:25:00.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx-Rewrite相关功能"><a href="#Nginx-Rewrite相关功能" class="headerlink" title="Nginx Rewrite相关功能"></a>Nginx Rewrite相关功能</h2><p><strong>Nginx服务器利用ngx_http_rewrite_module 模块解析和处理rewrite请求，此功能依靠 PCRE(perl compatibleregularex pression)，因此编译之前要安装PCRE库，rewrite是nginx服务器的重要功能之一，用于实现URL的重写，URL的重写是非常有用的功能，比如它可以在我们改变网站结构之后，不需要客户端修改原来的书签，也无需其他网站修改我们的链接，就可以设置为访问，另外还可以在一定程度上提高网站的安全性。</strong></p><p>ngx_http_rewrite_module模块指令：<a href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_rewrite_module.html</a></p><h3 id="1-1-if"><a href="#1-1-if" class="headerlink" title="1.1  if"></a>1.1  if</h3><p><strong>用于条件匹配判断，并根据条件判断结果选择不同的Nginx配置，可以配置在server或location块中进行配置，Nginx的if语法仅能使用if做单次判断，不支持使用if else或者if elif这样的多重判断，用法如下：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> （条件匹配） &#123;</span><br><span class="line">action</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>使用正则表达式对变量进行匹配，匹配成功时if指令认为条件为true，否则认为false，变量与表达式之间使用以下符号链接：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">=： #比较变量和字符串是否相等，相等时if指令认为该条件为true，反之为false。</span><br><span class="line">!=: #比较变量和字符串是否不相等，不相等时if指令认为条件为true，反之为false。</span><br><span class="line">~： #表示在匹配过程中区分大小写字符，（可以通过正则表达式匹配），满足匹配条件为真，不满足为假。</span><br><span class="line">!~：#为区分大小写字符且匹配结果不匹配，不满足为真，满足为假。</span><br><span class="line">~*: #表示在匹配过程中不区分大小写字符，（可以通过正则表达式匹配），满足匹配条件为真，不满足为假。</span><br><span class="line">!~*: #为不区分大小字符且匹配结果不匹配，满足为假，不满足为真。</span><br><span class="line">-f 和 ! -f: #判断请求的文件是否存在和是否不存在</span><br><span class="line">-d 和 ! -d: #判断请求的目录是否存在和是否不存在。</span><br><span class="line">-x 和 ! -x: #判断文件是否可执行和是否不可执行。</span><br><span class="line">-e 和 ! -e: #判断请求的文件或目录是否存在和是否不存在(包括文件，目录，软链接)。</span><br></pre></td></tr></table></figure></div><p><strong>实例：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if ( $scheme &#x3D; http )&#123;</span><br><span class="line">   echo &quot;if-----&gt; $scheme&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( $scheme &#x3D; https )&#123;</span><br><span class="line">   echo &quot;if ----&gt; $scheme&quot;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div><p><strong>注： 如果$变量的值为空字符串或是以0开头的任意字符串，则if指令认为该条件为false，其他条件为true。</strong></p><h3 id="1-2-set"><a href="#1-2-set" class="headerlink" title="1.2 set"></a>1.2 set</h3><p><strong>指定key并给其定义一个变量，变量可以调用Nginx内置变量赋值给key，另外set定义格式为set $key $value，及无论是key还是value都要加$符号</strong></p><p>设置变量</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location /main &#123;</span><br><span class="line"> root /data/nginx/html/pc;</span><br><span class="line"> index index.html;</span><br><span class="line"> default_type text/html;</span><br><span class="line">  <span class="built_in">set</span> <span class="variable">$name</span> daming;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$name</span>;</span><br><span class="line">  <span class="built_in">set</span> <span class="variable">$my_port</span> <span class="variable">$server_port</span>;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$my_port</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="1-3-break"><a href="#1-3-break" class="headerlink" title="1.3 break"></a>1.3 break</h3><p><strong>用于中断当前相同作用域(location)中的其他Nginx配置，与该指令处于同一作用域的Nginx配置中，位于它前面的配置生效，位于后面的指令配置就不再生效了，Nginx服务器在根据配置处理请求的过程中遇到该指令的时候，回到上一层作用域继续向下读取配置，该指令可以在server块和location块以及if块中使用，使用语法如下：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;main &#123;</span><br><span class="line"> root &#x2F;data&#x2F;nginx&#x2F;html&#x2F;pc;</span><br><span class="line"> index index.html;</span><br><span class="line"> default_type text&#x2F;html;</span><br><span class="line">  set $name daming;</span><br><span class="line">  echo $name;</span><br><span class="line"> break;</span><br><span class="line">  set $my_port $server_port;</span><br><span class="line">  echo $my_port;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="rewrite指令"><a href="#rewrite指令" class="headerlink" title="rewrite指令"></a>rewrite指令</h2><p><strong>通过正则表达式的匹配来改变URI，可以同时存在一个或多个指令，按照顺序依次对URI进行匹配，rewrite主要是针对用户请求的URL或者是URI做具体处理</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># URI(universal resource identifier)：通用资源标识符，标识一个资源的路径，可以不带协议。</span></span><br><span class="line"></span><br><span class="line"><span class="section"># URL(uniform resource location):统一资源定位符，是用于在Internet中描述资源的字符串，是URI的子集，主要包括传输协议(scheme)、主机(IP、端口号或者域名)和资源具体地址(目录和文件名)等三部分，一般格式为scheme://主机名[:端口号][/资源路径],如：http://www.a.com:8080/path/file/index.html就是一个URL路径，URL必须带访问协议。</span></span><br><span class="line"><span class="section"># 每个URL都是一个URI，但是URI不都是URL。</span></span><br></pre></td></tr></table></figure></div><p>rewrite的官方介绍地址：<a href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite，" target="_blank" rel="noopener">https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite，</a> rewrite可<br>以配置在server、location、if</p><p><code>rewrite将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为表达式指定的新的URI。 注意：</code><br><code>如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换完成后，会重新一轮</code><br><code>的替换检查，隐含有循环机制,但不超过10次；如果超过，提示500响应码，[flag]所表示的标志位用于控制此循环</code><br><code>机制，如果替换后的URL是以http://或https://开头，则替换结果会直接以重向返回给客户端, 即永久重定向301</code></p><h3 id="2-rewrite-flag使用介绍"><a href="#2-rewrite-flag使用介绍" class="headerlink" title="2. rewrite flag使用介绍"></a>2. rewrite flag使用介绍</h3><p><strong>利用nginx的rewrite的指令，可以实现url的重新跳转，rewrtie有四种不同的flag，分别是redirect(临时重定向)、permanent(永久重定向)、break和last。其中前两种是跳转型的flag，后两种是代理型，跳转型是指有客户端浏览器重新对新地址进行请求，代理型是在WEB服务器内部实现跳转的。</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">redirect；</span><br><span class="line"><span class="comment"># 临时重定向，重写完成后以临时重定向方式直接返回重写后生成的新URL给客户端，由客户端重新发起请求；使用相对路径,或者http://或https://开头，状态码：302</span></span><br><span class="line">例子：[root@centos7 ~]<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">    rewrite / 127.0.0.1/new.html redirect;   <span class="comment">#server段添加此信息</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 重启Nginx 测试</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># /apps/nginx/sbin/nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@centos7 ~]<span class="comment"># systemctl restart nginx.service </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># curl -I 127.0.0.1</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># curl -I  127.0.0.1</span></span><br><span class="line">HTTP/1.1 302 Moved Temporarily    <span class="comment">#状态码返回302</span></span><br><span class="line">Server: tengine   <span class="comment">#</span></span><br><span class="line">Date: Tue, 07 Jan 2020 05:47:07 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 138</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: 127.0.0.1/new.html</span><br><span class="line">--------------------------------------------------------------------------------------</span><br><span class="line">permanent；</span><br><span class="line"><span class="comment"># 重写完成后以永久重定向方式直接返回重写后生成的新URL给客户端，由客户端重新发起请求，状态码：301</span></span><br><span class="line">例子：[root@centos7 ~]<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">    rewrite / 127.0.0.1/new.html redirect;   <span class="comment">#server段添加此信息</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># 重启Nginx 测试</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># systemctl restart nginx.service </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># curl -I 127.0.0.1</span></span><br><span class="line">HTTP/1.1 301 Moved Permanently<span class="comment">#状态码返回301</span></span><br><span class="line">Server: tengine</span><br><span class="line">Date: Tue, 07 Jan 2020 06:21:17 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 162</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: 127.0.0.1/new.html</span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------------</span><br><span class="line">last；</span><br><span class="line"><span class="comment"># 重写完成后停止对当前URI在当前location中后续的其它重写操作，而后对新的URL启动新一轮重写检查，不建议在location中使用</span></span><br><span class="line"><span class="built_in">break</span>；</span><br><span class="line"><span class="comment"># 重写完成后停止对当前URL在当前location中后续的其它重写操作，而后直接将匹配结果返还给客户端即结束循环并返回数据给客户端，建议在location中使用</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Nginx-Rewrite相关功能&quot;&gt;&lt;a href=&quot;#Nginx-Rewrite相关功能&quot; class=&quot;headerlink&quot; title=&quot;Nginx Rewrite相关功能&quot;&gt;&lt;/a&gt;Nginx Rewrite相关功能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Ng
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx日志</title>
    <link href="https://caohziming.net/post/49679.html"/>
    <id>https://caohziming.net/post/49679.html</id>
    <published>2020-01-07T05:11:04.418Z</published>
    <updated>2020-01-07T05:12:38.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx-访问日志格式"><a href="#nginx-访问日志格式" class="headerlink" title="nginx 访问日志格式"></a>nginx 访问日志格式</h2><h3 id="自定义默认格式日志"><a href="#自定义默认格式日志" class="headerlink" title="自定义默认格式日志"></a>自定义默认格式日志</h3><p>如果是要保留日志的源格式，只是添加相应的日志内容，则配置如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000;</span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line">error_log  logs/error.log  debug;</span><br><span class="line"></span><br><span class="line">pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  65536;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    include /apps/nginx/conf/conf.d/*.conf;</span><br><span class="line">    log_format  nginx_format1  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"><span class="comment">#重启nginx并访问测试日志格式</span></span><br></pre></td></tr></table></figure></div><h3 id="自定义json格式日志"><a href="#自定义json格式日志" class="headerlink" title="自定义json格式日志"></a>自定义json格式日志</h3><p><strong>Nginx 的默认访问日志记录内容相对比较单一，默认的格式也不方便后期做日志统计分析，生产环境中通常将<br>nginx日志转换为json日志，然后配合使用ELK做日志收集-统计-分析。</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">log_format access_json <span class="string">'&#123;"@timestamp":"$time_iso8601",'</span></span><br><span class="line">    <span class="string">'"host":"$server_addr",'</span></span><br><span class="line">    <span class="string">'"clientip":"$remote_addr",'</span></span><br><span class="line">    <span class="string">'"size":$body_bytes_sent,'</span></span><br><span class="line">    <span class="string">'"responsetime":$request_time,'</span></span><br><span class="line">    <span class="string">'"upstreamtime":"$upstream_response_time",'</span></span><br><span class="line">    <span class="string">'"upstreamhost":"$upstream_addr",'</span></span><br><span class="line">    <span class="string">'"http_host":"$host",'</span></span><br><span class="line">    <span class="string">'"uri":"$uri",'</span></span><br><span class="line">    <span class="string">'"domain":"$host",'</span></span><br><span class="line">    <span class="string">'"xff":"$http_x_forwarded_for",'</span></span><br><span class="line">    <span class="string">'"referer":"$http_referer",'</span></span><br><span class="line">    <span class="string">'"tcp_xff":"$proxy_protocol_addr",'</span></span><br><span class="line">    <span class="string">'"http_user_agent":"$http_user_agent",'</span></span><br><span class="line">    <span class="string">'"status":"$status"&#125;'</span>;  </span><br><span class="line"><span class="comment">#重启Nginx并访问测试日志格式</span></span><br></pre></td></tr></table></figure></div><h3 id="json格式的日志访问统计"><a href="#json格式的日志访问统计" class="headerlink" title="json格式的日志访问统计"></a>json格式的日志访问统计</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#Author:Zhang ShiJie</span></span><br><span class="line">status_200= []</span><br><span class="line">status_404= []</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"access_json.log"</span>) <span class="keyword">as</span> f:</span><br><span class="line"> <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">   line = eval(line)</span><br><span class="line">    <span class="keyword">if</span> line.get(<span class="string">"status"</span>) == <span class="string">"200"</span>:</span><br><span class="line">     status_200.append(line.get)</span><br><span class="line">    <span class="keyword">elif</span> line.get(<span class="string">"status"</span>) == <span class="string">"404"</span>:</span><br><span class="line">     status_404.append(line.get)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">     print(<span class="string">"状态码 ERROR"</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"状态码200的有--:"</span>,len(status_200)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"状态码404的有--:"</span>,len(status_404)</span><br><span class="line"><span class="comment">#保存日志文件到指定路径并进测试：</span></span><br><span class="line">[root@s2 ~]<span class="comment"># python nginx_json.py</span></span><br><span class="line">状态码<span class="number">200</span>的有--: <span class="number">1910</span></span><br><span class="line">状态码<span class="number">404</span>的有--: <span class="number">13</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx-访问日志格式&quot;&gt;&lt;a href=&quot;#nginx-访问日志格式&quot; class=&quot;headerlink&quot; title=&quot;nginx 访问日志格式&quot;&gt;&lt;/a&gt;nginx 访问日志格式&lt;/h2&gt;&lt;h3 id=&quot;自定义默认格式日志&quot;&gt;&lt;a href=&quot;#自定义默
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx变量</title>
    <link href="https://caohziming.net/post/38641.html"/>
    <id>https://caohziming.net/post/38641.html</id>
    <published>2020-01-07T04:41:45.019Z</published>
    <updated>2020-01-07T05:12:38.661Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx-内置变量和自定义变量"><a href="#nginx-内置变量和自定义变量" class="headerlink" title="nginx 内置变量和自定义变量"></a>nginx 内置变量和自定义变量</h2><p><strong>nginx的变量可以在配置文件中引用，作为功能判断或者日志等场景使用，变量可以分为内置变量和自定义变量，内置变量是由nginx模块自带，通过变量可以获取到众多的与客户端访问相关的值。</strong></p><h3 id="常用内置变量"><a href="#常用内置变量" class="headerlink" title="常用内置变量"></a>常用内置变量</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$remote_addr</span>            存放了客户端的地址，注意是客户端的公网IP，也就是一家人访问一个网站，则会显示为路由器的公网IP。</span><br><span class="line"><span class="variable">$args</span>                   URL中的指令包含的参数，例如http://www.magedu.net/main/index.do?id=20190221&amp;partner=search </span><br><span class="line">                        中的id=20190221&amp;partner=search，动态服务器中经常会有这些信息</span><br><span class="line"><span class="variable">$document_root</span>          保存了针对当前资源的请求的系统根目录，如/apps/nginx/html</span><br><span class="line"><span class="variable">$document_uri</span>           保存了当前请求中不包含指令的URI，注意是不包含请求的指令，比如</span><br><span class="line">                        http://www.magedu.net/main/index.do?id=20190221&amp;partner=search 会被定义为 /main/index.do</span><br><span class="line"><span class="variable">$host</span>                   存放了请求的 host 名称</span><br><span class="line"><span class="variable">$http_user_agent</span>        客户端使用的浏览器的详细信息</span><br><span class="line"><span class="variable">$limit_rate</span>             如果 nginx 服务器使用 limit_rate 配置了显示网络速率，则会显示，如果没有设置， 则显示 0</span><br><span class="line"><span class="variable">$remote_port</span>            客户端请求 nginx 服务器时随机打开的端口，这是每个客户端自己的端口。</span><br><span class="line"><span class="variable">$request_body_file</span>      做反向代理时发给后端服务器的本地资源的名称</span><br><span class="line"><span class="variable">$request_method</span>         请求资源的方式，GET/PUT/DELETE等</span><br><span class="line"><span class="variable">$request_filename</span>       当前请求的资源文件的路径名称，由root或<span class="built_in">alias</span>指令与URI请求生成的文件绝对路径，</span><br><span class="line">                        比如 /apps/nginx/html/main/index.html</span><br><span class="line"><span class="variable">$scheme</span>                 请求的协议，如ftp，https，http等</span><br><span class="line"><span class="variable">$server_protocol</span>        保存了客户端请求资源使用的协议的版本，如HTTP/1.0，HTTP/1.1，HTTP/2.0等</span><br><span class="line"><span class="variable">$server_addr</span>            保存了服务器的 IP 地址</span><br><span class="line"><span class="variable">$server_name</span>            请求的服务器的主机名</span><br><span class="line"><span class="variable">$server_port</span>            请求的服务器的端口号</span><br></pre></td></tr></table></figure></div><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><p>假如需要自定义变量名称和值，使用指令set $variable value;，则方法如下：<br>Syntax: set $variable value; Default: — Context: server, location, if</p><p>​            —&gt;可以在配置文件的 server location if 中使用 set $varname value 进行设置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen80;</span><br><span class="line">server_namewww.daming.net;</span><br><span class="line">location /main &#123;</span><br><span class="line">index index.html;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$daming</span> <span class="string">"daming.com"</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$daming</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@centos7 ~]<span class="comment"># curl www.daming.net/main</span></span><br><span class="line">192.168.66.7</span><br><span class="line">daming.com</span><br><span class="line">[root@centos7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx-内置变量和自定义变量&quot;&gt;&lt;a href=&quot;#nginx-内置变量和自定义变量&quot; class=&quot;headerlink&quot; title=&quot;nginx 内置变量和自定义变量&quot;&gt;&lt;/a&gt;nginx 内置变量和自定义变量&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;nginx的
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 核心配置</title>
    <link href="https://caohziming.net/post/9355.html"/>
    <id>https://caohziming.net/post/9355.html</id>
    <published>2020-01-07T03:48:50.236Z</published>
    <updated>2020-01-07T03:57:46.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx-核心配置详解"><a href="#Nginx-核心配置详解" class="headerlink" title="Nginx 核心配置详解"></a>Nginx 核心配置详解</h2><h3 id="1-全局配置"><a href="#1-全局配置" class="headerlink" title="1. 全局配置"></a>1. 全局配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">user nginx nginx; <span class="comment">#启动Nginx工作进程的用户和组</span></span><br><span class="line">worker_processes [number | auto]; <span class="comment">#启动Nginx工作进程的数量</span></span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000; <span class="comment">#将Nginx工作进程绑定到指定的CPU核</span></span><br><span class="line">心，默认Nginx是不进行进程绑定的，绑定并不是意味着当前nginx进程独占以一核心CPU，但是可以保证此进程不会</span><br><span class="line">运行在其他核心上，这就极大减少了nginx的工作进程在不同的cpu核心上的来回跳转，减少了CPU对进程的资源分配与</span><br><span class="line">回收以及内存管理等，因此可以有效的提升nginx服务器的性能。</span><br><span class="line"><span class="comment">#例子：</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line">        user  nginx;</span><br><span class="line">        worker_processes  auto;</span><br><span class="line">        worker_cpu_affinity 00000001 00000010 00000100 00001000;</span><br><span class="line">        <span class="comment">#error_log  logs/error.log;</span></span><br><span class="line">        <span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line">        error_log  logs/error.log  debug;</span><br><span class="line">[root@centos7 ~]<span class="comment"># /apps/nginx/sbin/nginx -t</span></span><br><span class="line">        nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">        nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@centos7 ~]<span class="comment"># ps axo pid,cmd,psr,user | grep nginx</span></span><br><span class="line">         43102 nginx: master process /apps   1 root</span><br><span class="line">         43103 nginx: worker process         0 nginx</span><br><span class="line">         43104 nginx: worker process         3 nginx</span><br><span class="line">         43105 nginx: worker process         1 nginx</span><br><span class="line">         43106 nginx: worker process         2 nginx</span><br><span class="line">         43763 grep --color=auto nginx       2 roo</span><br><span class="line"><span class="comment">#错误日志记录配置，语法：error_log file [debug | info | notice | warn | error | crit |</span></span><br><span class="line">alert | emerg]</span><br><span class="line">        <span class="comment">#error_log logs/error.log;</span></span><br><span class="line">        <span class="comment">#error_log logs/error.log notice;</span></span><br><span class="line">        error_log /apps/nginx/logs/error.log error;</span><br><span class="line"><span class="comment">#pid文件保存路径</span></span><br><span class="line">        pid    /apps/nginx/logs/nginx.pid;</span><br><span class="line">worker_priority 0; <span class="comment">#工作进程nice值，-20~19</span></span><br><span class="line"></span><br><span class="line">worker_rlimit_nofile 65536; <span class="comment">#这个数字包括Nginx的所有连接（例如与代理服务器的连接等），而不仅仅是与</span></span><br><span class="line">客户端的连接,另一个考虑因素是实际的并发连接数不能超过系统级别的最大打开文件数的限制.</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># watch -n1 'ps -axo pid,cmd,nice | grep nginx' #验证进程优先级</span></span><br><span class="line"></span><br><span class="line">daemon off;  <span class="comment">#前台运行Nginx服务用于测试、docker等环境。</span></span><br><span class="line"></span><br><span class="line">master_process off|on; <span class="comment">#是否开启Nginx的master-woker工作模式，仅用于开发调试场景。</span></span><br><span class="line"></span><br><span class="line">events &#123; <span class="comment">#事件模型配置参数</span></span><br><span class="line"> worker_connections  65536;  <span class="comment">#设置单个工作进程的最大并发连接数</span></span><br><span class="line"> use epoll; <span class="comment">#使用epoll事件驱动，Nginx支持众多的事件驱动，比如select、poll、epoll，只能设置在</span></span><br><span class="line">events模块中设置。</span><br><span class="line"> accept_mutex on; <span class="comment">#优化同一时刻只有一个请求而避免多个睡眠进程被唤醒的设置，on为防止被同时唤醒默认</span></span><br><span class="line">为off，全部唤醒的过程也成为<span class="string">"惊群"</span>，因此nginx刚安装完以后要进行适当的优化。</span><br><span class="line"> multi_accept on; Nginx服务器的每个工作进程可以同时接受多个新的网络连接，但是需要在配置文件中配</span><br><span class="line">置，此指令默认为关闭，即默认为一个工作进程只能一次接受一个新的网络连接，打开后几个同时接受多个。</span><br></pre></td></tr></table></figure></div><h3 id="2-http详细配置"><a href="#2-http详细配置" class="headerlink" title="2. http详细配置"></a>2. http详细配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"> include    mime.types; <span class="comment">#导入支持的文件类型</span></span><br><span class="line"> default_type application/octet-stream; <span class="comment">#设置默认的类型，会提示下载不匹配的类型文件</span></span><br><span class="line"><span class="comment">#日志配置部分</span></span><br><span class="line">  <span class="comment">#log_format main '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">  <span class="comment">#         '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">  <span class="comment">#         '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line">  <span class="comment">#access_log logs/access.log main;</span></span><br><span class="line"><span class="comment">#自定义优化参数</span></span><br><span class="line"> sendfile    on; <span class="comment">#实现文件零拷贝</span></span><br><span class="line"><span class="comment">#tcp_nopush   on; #在开启了sendfile的情况下，合并请求后统一发送给客户端。</span></span><br><span class="line">  <span class="comment">#tcp_nodelay  off; #在开启了keepalived模式下的连接是否启用TCP_NODELAY选项，当为off时，延</span></span><br><span class="line">迟0.2s发送，默认On时，不延迟发送，立即发送用户相应报文。</span><br><span class="line">  <span class="comment">#keepalive_timeout 0;</span></span><br><span class="line"> keepalive_timeout  65 65; <span class="comment">#设置会话保持时间</span></span><br><span class="line">  <span class="comment">#gzip on; #开启文件压缩</span></span><br><span class="line"> server &#123;</span><br><span class="line">   listen    80; <span class="comment">#设置监听地址和端口</span></span><br><span class="line">   server_name localhost; <span class="comment">#设置server name，可以以空格隔开写多个并支持正则表达式，如</span></span><br><span class="line">*.magedu.com www.magedu.* www.(site\d+)\.magedu\.com$ default_server</span><br><span class="line">    <span class="comment">#charset koi8-r; #设置编码格式，默认是俄语格式，可以改为utf-8</span></span><br><span class="line">    <span class="comment">#access_log logs/host.access.log main;</span></span><br><span class="line">   location / &#123;</span><br><span class="line">     root  html;</span><br><span class="line">     index index.html index.htm;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">#error_page 404       /404.html;</span></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">   error_page  500 502 503 504 /50x.html; <span class="comment">#定义错误页面</span></span><br><span class="line">   location = /50x.html &#123;</span><br><span class="line">     root  html;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123; #以http的方式转发php请求到指定web服务器</span></span><br><span class="line">    <span class="comment">#  proxy_pass  http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123; #以fastcgi的方式转发php请求到php处理</span></span><br><span class="line">    <span class="comment">#  root      html;</span></span><br><span class="line">    <span class="comment">#  fastcgi_pass  127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#  fastcgi_index index.php;</span></span><br><span class="line">    <span class="comment">#  fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#  include    fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123; #拒绝web形式访问指定文件，如很多的网站都是通过.htaccess文件来改变自</span></span><br><span class="line">己的重定向等功能。</span><br><span class="line">    <span class="comment">#  deny all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">   location ~ /passwd.html &#123;</span><br><span class="line">     deny all;</span><br><span class="line">   &#125;</span><br><span class="line"> <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#server &#123; #自定义虚拟server</span></span><br><span class="line">  <span class="comment">#  listen    8000;</span></span><br><span class="line">  <span class="comment">#  listen    somename:8080;</span></span><br><span class="line">  <span class="comment">#  server_name somename alias another.alias;</span></span><br><span class="line">  <span class="comment">#  location / &#123;</span></span><br><span class="line">  <span class="comment">#    root  html;</span></span><br><span class="line">  <span class="comment">#    index index.html index.htm; #指定默认网页文件，此指令由ngx_http_index_module模</span></span><br><span class="line">块提供</span><br><span class="line">  <span class="comment">#  &#125;</span></span><br><span class="line">  <span class="comment">#&#125;</span></span><br><span class="line">  <span class="comment"># HTTPS server</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#server &#123; #https服务器配置</span></span><br><span class="line">  <span class="comment">#  listen    443 ssl;</span></span><br><span class="line">  <span class="comment">#  server_name localhost;</span></span><br><span class="line">  <span class="comment">#  ssl_certificate   cert.pem;</span></span><br><span class="line">  <span class="comment">#  ssl_certificate_key cert.key;</span></span><br><span class="line">  <span class="comment">#  ssl_session_cache  shared:SSL:1m;</span></span><br><span class="line">  <span class="comment">#  ssl_session_timeout 5m;</span></span><br><span class="line">  <span class="comment">#  ssl_ciphers HIGH:!aNULL:!MD5;</span></span><br><span class="line">  <span class="comment">#  ssl_prefer_server_ciphers on;</span></span><br><span class="line">  <span class="comment">#  location / &#123;</span></span><br><span class="line">  <span class="comment">#    root  html;</span></span><br><span class="line">  <span class="comment">#    index index.html index.htm;</span></span><br><span class="line">  <span class="comment">#  &#125;</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Nginx-核心配置详解&quot;&gt;&lt;a href=&quot;#Nginx-核心配置详解&quot; class=&quot;headerlink&quot; title=&quot;Nginx 核心配置详解&quot;&gt;&lt;/a&gt;Nginx 核心配置详解&lt;/h2&gt;&lt;h3 id=&quot;1-全局配置&quot;&gt;&lt;a href=&quot;#1-全局配置&quot;
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx编译安装</title>
    <link href="https://caohziming.net/post/31024.html"/>
    <id>https://caohziming.net/post/31024.html</id>
    <published>2020-01-02T11:08:41.423Z</published>
    <updated>2020-01-07T03:54:22.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx编译安装"><a href="#nginx编译安装" class="headerlink" title="nginx编译安装"></a>nginx编译安装</h1><p>环境准备：目前在CentOS8</p><p>我们准备一台新装的 CentOS8 服务器， 关闭 selinux， 清空 iptables 规则, 安装编译 nginx 依赖的软件包</p><ol><li><p>yum remove -y firewalld</p></li><li><p>yum install epel-release</p></li><li><p>yum install wget</p></li><li><p>yum install -y vim lrzsz tree screen psmisc lsof tcpdump wget #ntpdate（Centos8  目前安装ntpdate报错） gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel net-tools iotop bc zip unzip zlib-devel bash-completion nfs-utils automake libxml2 libxml2-devel libxslt libxslt-devel perl perl-ExtUtils-Embed  #所需编译包组</p></li><li><p>cd /usr/local/src/</p></li><li><p>wget <a href="http://nginx.org/download/nginx-1.16.0.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-1.16.0.tar.gz</a></p></li><li><p>tar xf nginx-1.16.0.tar.gz </p></li><li><p>cd nginx-1.16.0</p></li><li><pre><code class="bash">./configure --prefix=/apps/nginx \         --user=nginx \         --group=nginx\         --with-http_ssl_module\         --with-http_v2_module \         --with-http_realip_module\         --with-http_stub_status_module \         --with-http_gzip_static_module\         --with-pcre --with-stream \         --with-stream_ssl_module \         --with-stream_realip_module \         --with-debug<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">10. make -j 4 &amp;&amp; makel install </span><br><span class="line"></span><br><span class="line">编译所需模块  #根据需求自行选择</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line">root@centos8 ~]# cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;nginx-1.16.1&#x2F;</span><br><span class="line">[root@centos8 nginx-1.16.1]# .&#x2F;configure --help</span><br><span class="line"></span><br><span class="line">  --help                             print this message</span><br><span class="line"></span><br><span class="line">  --prefix&#x3D;PATH                      set installation prefix</span><br><span class="line">  --sbin-path&#x3D;PATH                   set nginx binary pathname</span><br><span class="line">  --modules-path&#x3D;PATH                set modules path</span><br><span class="line">  --conf-path&#x3D;PATH                   set nginx.conf pathname</span><br><span class="line">  --error-log-path&#x3D;PATH              set error log pathname</span><br><span class="line">  --pid-path&#x3D;PATH                    set nginx.pid pathname</span><br><span class="line">  --lock-path&#x3D;PATH                   set nginx.lock pathname</span><br><span class="line"></span><br><span class="line">  --user&#x3D;USER                        set non-privileged user for</span><br><span class="line">                                     worker processes</span><br><span class="line">  --group&#x3D;GROUP                      set non-privileged group for</span><br><span class="line">                                     worker processes</span><br><span class="line"></span><br><span class="line">  --build&#x3D;NAME                       set build name</span><br><span class="line">  --builddir&#x3D;DIR                     set build directory</span><br><span class="line"></span><br><span class="line">  --with-select_module               enable select module</span><br><span class="line">  --without-select_module            disable select module</span><br><span class="line">  --with-poll_module                 enable poll module</span><br><span class="line">  --without-poll_module              disable poll module</span><br><span class="line"></span><br><span class="line">  --with-threads                     enable thread pool support</span><br><span class="line"></span><br><span class="line">  --with-file-aio                    enable file AIO support</span><br><span class="line"></span><br><span class="line">  --with-http_ssl_module             enable ngx_http_ssl_module</span><br><span class="line">  --with-http_v2_module              enable ngx_http_v2_module</span><br><span class="line">  --with-http_realip_module          enable ngx_http_realip_module</span><br><span class="line">  --with-http_addition_module        enable ngx_http_addition_module</span><br><span class="line">  --with-http_xslt_module            enable ngx_http_xslt_module</span><br><span class="line">  --with-http_xslt_module&#x3D;dynamic    enable dynamic ngx_http_xslt_module</span><br><span class="line">  --with-http_image_filter_module    enable ngx_http_image_filter_module</span><br><span class="line">  --with-http_image_filter_module&#x3D;dynamic</span><br><span class="line">                                     enable dynamic ngx_http_image_filter_module</span><br><span class="line">  --with-http_geoip_module           enable ngx_http_geoip_module</span><br><span class="line">  --with-http_geoip_module&#x3D;dynamic   enable dynamic ngx_http_geoip_module</span><br><span class="line">  --with-http_sub_module             enable ngx_http_sub_module</span><br><span class="line">  --with-http_dav_module             enable ngx_http_dav_module</span><br><span class="line">  --with-http_flv_module             enable ngx_http_flv_module</span><br><span class="line">  --with-http_mp4_module             enable ngx_http_mp4_module</span><br><span class="line">  --with-http_gunzip_module          enable ngx_http_gunzip_module</span><br><span class="line">  --with-http_gzip_static_module     enable ngx_http_gzip_static_module</span><br><span class="line">  --with-http_auth_request_module    enable ngx_http_auth_request_module</span><br><span class="line">  --with-http_random_index_module    enable ngx_http_random_index_module</span><br><span class="line">  --with-http_secure_link_module     enable ngx_http_secure_link_module</span><br><span class="line">  --with-http_degradation_module     enable ngx_http_degradation_module</span><br><span class="line">  --with-http_slice_module           enable ngx_http_slice_module</span><br><span class="line">  --with-http_stub_status_module     enable ngx_http_stub_status_module</span><br><span class="line"></span><br><span class="line">  --without-http_charset_module      disable ngx_http_charset_module</span><br><span class="line">  --without-http_gzip_module         disable ngx_http_gzip_module</span><br><span class="line">  --without-http_ssi_module          disable ngx_http_ssi_module</span><br><span class="line">  --without-http_userid_module       disable ngx_http_userid_module</span><br><span class="line">  --without-http_access_module       disable ngx_http_access_module</span><br><span class="line">  --without-http_auth_basic_module   disable ngx_http_auth_basic_module</span><br><span class="line">  --without-http_mirror_module       disable ngx_http_mirror_module</span><br><span class="line">  --without-http_autoindex_module    disable ngx_http_autoindex_module</span><br><span class="line">  --without-http_geo_module          disable ngx_http_geo_module</span><br><span class="line">  --without-http_map_module          disable ngx_http_map_module</span><br><span class="line">  --without-http_split_clients_module disable ngx_http_split_clients_module</span><br><span class="line">  --without-http_referer_module      disable ngx_http_referer_module</span><br><span class="line">  --without-http_rewrite_module      disable ngx_http_rewrite_module</span><br><span class="line">  --without-http_proxy_module        disable ngx_http_proxy_module</span><br><span class="line">  --without-http_fastcgi_module      disable ngx_http_fastcgi_module</span><br><span class="line">  --without-http_uwsgi_module        disable ngx_http_uwsgi_module</span><br><span class="line">  --without-http_scgi_module         disable ngx_http_scgi_module</span><br><span class="line">  --without-http_grpc_module         disable ngx_http_grpc_module</span><br><span class="line">  --without-http_memcached_module    disable ngx_http_memcached_module</span><br><span class="line">  --without-http_limit_conn_module   disable ngx_http_limit_conn_module</span><br><span class="line">  --without-http_limit_req_module    disable ngx_http_limit_req_module</span><br><span class="line">  --without-http_empty_gif_module    disable ngx_http_empty_gif_module</span><br><span class="line">  --without-http_browser_module      disable ngx_http_browser_module</span><br><span class="line">  --without-http_upstream_hash_module</span><br><span class="line">                                     disable ngx_http_upstream_hash_module</span><br><span class="line">  --without-http_upstream_ip_hash_module</span><br><span class="line">                                     disable ngx_http_upstream_ip_hash_module</span><br><span class="line">  --without-http_upstream_least_conn_module</span><br><span class="line">                                     disable ngx_http_upstream_least_conn_module</span><br><span class="line">  --without-http_upstream_random_module</span><br><span class="line">                                     disable ngx_http_upstream_random_module</span><br><span class="line">  --without-http_upstream_keepalive_module</span><br><span class="line">                                     disable ngx_http_upstream_keepalive_module</span><br><span class="line">  --without-http_upstream_zone_module</span><br><span class="line">                                     disable ngx_http_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-http_perl_module            enable ngx_http_perl_module</span><br><span class="line">  --with-http_perl_module&#x3D;dynamic    enable dynamic ngx_http_perl_module</span><br><span class="line">  --with-perl_modules_path&#x3D;PATH      set Perl modules path</span><br><span class="line">  --with-perl&#x3D;PATH                   set perl binary pathname</span><br><span class="line"></span><br><span class="line">  --http-log-path&#x3D;PATH               set http access log pathname</span><br><span class="line">  --http-client-body-temp-path&#x3D;PATH  set path to store</span><br><span class="line">                                     http client request body temporary files</span><br><span class="line">  --http-proxy-temp-path&#x3D;PATH        set path to store</span><br><span class="line">                                     http proxy temporary files</span><br><span class="line">  --http-fastcgi-temp-path&#x3D;PATH      set path to store</span><br><span class="line">                                     http fastcgi temporary files</span><br><span class="line">  --http-uwsgi-temp-path&#x3D;PATH        set path to store</span><br><span class="line">                                     http uwsgi temporary files</span><br><span class="line">  --http-scgi-temp-path&#x3D;PATH         set path to store</span><br><span class="line">                                     http scgi temporary files</span><br><span class="line"></span><br><span class="line">  --without-http                     disable HTTP server</span><br><span class="line">  --without-http-cache               disable HTTP cache</span><br><span class="line"></span><br><span class="line">  --with-mail                        enable POP3&#x2F;IMAP4&#x2F;SMTP proxy module</span><br><span class="line">  --with-mail&#x3D;dynamic                enable dynamic POP3&#x2F;IMAP4&#x2F;SMTP proxy module</span><br><span class="line">  --with-mail_ssl_module             enable ngx_mail_ssl_module</span><br><span class="line">  --without-mail_pop3_module         disable ngx_mail_pop3_module</span><br><span class="line">  --without-mail_imap_module         disable ngx_mail_imap_module</span><br><span class="line">  --without-mail_smtp_module         disable ngx_mail_smtp_module</span><br><span class="line"></span><br><span class="line">  --with-stream                      enable TCP&#x2F;UDP proxy module</span><br><span class="line">  --with-stream&#x3D;dynamic              enable dynamic TCP&#x2F;UDP proxy module</span><br><span class="line">  --with-stream_ssl_module           enable ngx_stream_ssl_module</span><br><span class="line">  --with-stream_realip_module        enable ngx_stream_realip_module</span><br><span class="line">  --with-stream_geoip_module         enable ngx_stream_geoip_module</span><br><span class="line">  --with-stream_geoip_module&#x3D;dynamic enable dynamic ngx_stream_geoip_module</span><br><span class="line">  --with-stream_ssl_preread_module   enable ngx_stream_ssl_preread_module</span><br><span class="line">  --without-stream_limit_conn_module disable ngx_stream_limit_conn_module</span><br><span class="line">  --without-stream_access_module     disable ngx_stream_access_module</span><br><span class="line">  --without-stream_geo_module        disable ngx_stream_geo_module</span><br><span class="line">  --without-stream_map_module        disable ngx_stream_map_module</span><br><span class="line">  --without-stream_split_clients_module</span><br><span class="line">                                     disable ngx_stream_split_clients_module</span><br><span class="line">  --without-stream_return_module     disable ngx_stream_return_module</span><br><span class="line">  --without-stream_upstream_hash_module</span><br><span class="line">                                     disable ngx_stream_upstream_hash_module</span><br><span class="line">  --without-stream_upstream_least_conn_module</span><br><span class="line">                                     disable ngx_stream_upstream_least_conn_module</span><br><span class="line">  --without-stream_upstream_random_module</span><br><span class="line">                                     disable ngx_stream_upstream_random_module</span><br><span class="line">  --without-stream_upstream_zone_module</span><br><span class="line">                                     disable ngx_stream_upstream_zone_module</span><br><span class="line"></span><br><span class="line">  --with-google_perftools_module     enable ngx_google_perftools_module</span><br><span class="line">  --with-cpp_test_module             enable ngx_cpp_test_module</span><br><span class="line"></span><br><span class="line">  --add-module&#x3D;PATH                  enable external module</span><br><span class="line">  --add-dynamic-module&#x3D;PATH          enable dynamic external module</span><br><span class="line"></span><br><span class="line">  --with-compat                      dynamic modules compatibility</span><br><span class="line"></span><br><span class="line">  --with-cc&#x3D;PATH                     set C compiler pathname</span><br><span class="line">  --with-cpp&#x3D;PATH                    set C preprocessor pathname</span><br><span class="line">  --with-cc-opt&#x3D;OPTIONS              set additional C compiler options</span><br><span class="line">  --with-ld-opt&#x3D;OPTIONS              set additional linker options</span><br><span class="line">  --with-cpu-opt&#x3D;CPU                 build for the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro, pentium3, pentium4,</span><br><span class="line">                                     athlon, opteron, sparc32, sparc64, ppc64</span><br><span class="line"></span><br><span class="line">  --without-pcre                     disable PCRE library usage</span><br><span class="line">  --with-pcre                        force PCRE library usage</span><br><span class="line">  --with-pcre&#x3D;DIR                    set path to PCRE library sources</span><br><span class="line">  --with-pcre-opt&#x3D;OPTIONS            set additional build options for PCRE</span><br><span class="line">  --with-pcre-jit                    build PCRE with JIT compilation support</span><br><span class="line"></span><br><span class="line">  --with-zlib&#x3D;DIR                    set path to zlib library sources</span><br><span class="line">  --with-zlib-opt&#x3D;OPTIONS            set additional build options for zlib</span><br><span class="line">  --with-zlib-asm&#x3D;CPU                use zlib assembler sources optimized</span><br><span class="line">                                     for the specified CPU, valid values:</span><br><span class="line">                                     pentium, pentiumpro</span><br><span class="line"></span><br><span class="line">  --with-libatomic                   force libatomic_ops library usage</span><br><span class="line">  --with-libatomic&#x3D;DIR               set path to libatomic_ops library sources</span><br><span class="line"></span><br><span class="line">  --with-openssl&#x3D;DIR                 set path to OpenSSL library sources</span><br><span class="line">  --with-openssl-opt&#x3D;OPTIONS         set additional build options for OpenSSL</span><br><span class="line"></span><br><span class="line">  --with-debug                       enable debug logging</span><br></pre></td></tr></table></figure></div></code></pre></li><li><p>useradd nginx -s /sbin/nologin -u 2000  #以普通⽤⼾启动nginx</p></li><li><p>chown nginx.nginx -R /apps/nginx/</p><p><strong>备注：nginx完成安装以后，有四个主要的⽬录：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">conf：该⽬录中保存了nginx所有的配置⽂件，其中nginx.conf是nginx服务器的最核⼼最主要的配置⽂件，其他</span><br><span class="line">的.conf则是⽤来配置nginx相关的功能的，例如fastcgi功能使⽤的是fastcgi.conf和fastcgi_params两个⽂</span><br><span class="line">件，配置⽂件⼀般都有个样板配置⽂件，是⽂件名.default结尾，使⽤的使⽤将其复制为并将default去掉即可。</span><br><span class="line">html：该⽬录中保存了nginx服务器的web⽂件，但是可以更改为其他⽬录保存web⽂件,另外还有⼀个50x的web⽂件是</span><br><span class="line">默认的错误⻚⾯提⽰⻚⾯。</span><br><span class="line">logs：该⽬录⽤来保存nginx服务器的访问⽇志错误⽇志等⽇志，logs⽬录可以放在其他路径，⽐</span><br><span class="line">如/var/logs/nginx⾥⾯。</span><br><span class="line">sbin：该⽬录⽤来保存nginx⼆进制启动脚本，可以接受不同的参数以实现不同的功能。</span><br></pre></td></tr></table></figure></div></li><li><p>vi /usr/lib/systemd/system/nginx.service # 创建Nginx⾃启动脚本</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/apps/nginx/logs/nginx.pid</span><br><span class="line"><span class="comment"># Nginx will fail to start if /run/nginx.pid already exists but has the wrong</span></span><br><span class="line"><span class="comment"># SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class="line"><span class="comment"># https://bugzilla.redhat.com/show_bug.cgi?id=1268621</span></span><br><span class="line">ExecStartPre=/usr/bin/rm -f /apps/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/apps/nginx/sbin/nginx -t</span><br><span class="line">ExecStart=/apps/nginx/sbin/nginx</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="comment">#KillSignal=SIGQUIT</span></span><br><span class="line"><span class="comment">#TimeoutStopSec=5</span></span><br><span class="line">KillMode=process</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div></li><li><p>systemctl daemon-reload</p></li><li><p>systemctl start nginx</p></li><li><p>ss -ntl</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]<span class="comment"># ss -ntl</span></span><br><span class="line">State           Recv-Q           Send-Q                      Local Address:Port                      Peer Address:Port           </span><br><span class="line">LISTEN          0                32                          192.168.122.1:53                             0.0.0.0:*              </span><br><span class="line">LISTEN          0                128                               0.0.0.0:22                             0.0.0.0:*              </span><br><span class="line">LISTEN          0                5                               127.0.0.1:631                            0.0.0.0:*              </span><br><span class="line">LISTEN          0                128                             127.0.0.1:6010                           0.0.0.0:*              </span><br><span class="line">LISTEN          0                128                               0.0.0.0:111                            0.0.0.0:*              </span><br><span class="line">LISTEN          0                128                               0.0.0.0:80   <span class="comment">#80开启                          0.0.0.0:*              </span></span><br><span class="line">LISTEN          0                128                               0.0.0.0:51665                          0.0.0.0:*              </span><br><span class="line">LISTEN          0                128                                  [::]:22                                [::]:*              </span><br><span class="line">LISTEN          0                5                                   [::1]:631                               [::]:*              </span><br><span class="line">LISTEN          0                128                                 [::1]:6010                              [::]:*              </span><br><span class="line">LISTEN          0                128                                  [::]:45443                             [::]:*              </span><br><span class="line">LISTEN          0                128                                  [::]:111                               [::]:*</span><br></pre></td></tr></table></figure></div></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;nginx编译安装&quot;&gt;&lt;a href=&quot;#nginx编译安装&quot; class=&quot;headerlink&quot; title=&quot;nginx编译安装&quot;&gt;&lt;/a&gt;nginx编译安装&lt;/h1&gt;&lt;p&gt;环境准备：目前在CentOS8&lt;/p&gt;
&lt;p&gt;我们准备一台新装的 CentOS8 服
      
    
    </summary>
    
    
      <category term="Nginx" scheme="https://caohziming.net/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://caohziming.net/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>测试记录</title>
    <link href="https://caohziming.net/post/14562.html"/>
    <id>https://caohziming.net/post/14562.html</id>
    <published>2019-12-30T15:05:54.728Z</published>
    <updated>2019-12-30T15:08:22.316Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-请写出-5-个你熟悉的-Linux-软件服务的网络端口号和对应的软件名称。"><a href="#1-请写出-5-个你熟悉的-Linux-软件服务的网络端口号和对应的软件名称。" class="headerlink" title="1. 请写出 5 个你熟悉的 Linux 软件服务的网络端口号和对应的软件名称。"></a>1. 请写出 5 个你熟悉的 Linux 软件服务的网络端口号和对应的软件名称。</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">参考答案：</span><br><span class="line">21 ftp</span><br><span class="line">22 sshd</span><br><span class="line">25 smtp</span><br><span class="line">53 dns</span><br><span class="line">80 httpd</span><br><span class="line">443 httpd</span><br><span class="line">3306 mysql</span><br></pre></td></tr></table></figure></div><h4 id="2-使用-ansible-playbook-创建-20-个普通用户，用户名为-magedu01-到-magedu20，用户密码为Linux2019-39"><a href="#2-使用-ansible-playbook-创建-20-个普通用户，用户名为-magedu01-到-magedu20，用户密码为Linux2019-39" class="headerlink" title="2. 使用 ansible playbook 创建 20 个普通用户，用户名为 magedu01 到 magedu20，用户密码为Linux2019@39"></a>2. 使用 ansible playbook 创建 20 个普通用户，用户名为 magedu01 到 magedu20，用户密码为Linux2019@39</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># passwd gordon</span></span><br><span class="line">Changing password <span class="keyword">for</span> user gordon.</span><br><span class="line">New password: </span><br><span class="line">Retype new password: </span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/shadow | grep gordon</span></span><br><span class="line">gordon:<span class="variable">$6</span><span class="variable">$f6IXT17v</span><span class="variable">$CrNtB1iwvkDfO6tYinmZlWSpW04s2sEUv</span>/nAup.2idc5r.RaF0jKUDj35MwtT6E6WNybNNEnrFz/JvzLFDdFw.:18260:0:99999:7:::</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat user.yml </span></span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  </span><br><span class="line">  tasks:</span><br><span class="line">    - name: create user</span><br><span class="line">      user:</span><br><span class="line">        name: <span class="string">"&#123;&#123;item&#125;&#125;"</span></span><br><span class="line">        password: <span class="string">'$6$f6IXT17v$CrNtB1iwvkDfO6tYinmZlWSpW04s2sEUv/nAup.2idc5r.RaF0jKUDj35MwtT6E6WNybNNEnrFz/JvzLFDdFw.'</span></span><br><span class="line">      with_sequence: start=1 end=20 stride=1 format=<span class="string">"magedu%02d"</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h4 id="3-使用-crontab-任务计划，在每月22号晚上-9-点到晚上-11-点之间每-5-钟执行一次-root-backup-sh-脚本文件"><a href="#3-使用-crontab-任务计划，在每月22号晚上-9-点到晚上-11-点之间每-5-钟执行一次-root-backup-sh-脚本文件" class="headerlink" title="3. 使用 crontab 任务计划，在每月22号晚上 9 点到晚上 11 点之间每 5 钟执行一次 /root/backup.sh 脚本文件"></a>3. 使用 crontab 任务计划，在每月22号晚上 9 点到晚上 11 点之间每 5 钟执行一次 /root/backup.sh 脚本文件</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 21-22 22 * * /bin/bash  /root/backup.sh  &gt; /dev/null</span><br></pre></td></tr></table></figure></div><h4 id="4-请写出在-CentOS6-10-和-Ubuntu1804-版本中永久修改主机名为-magedu-org-过程"><a href="#4-请写出在-CentOS6-10-和-Ubuntu1804-版本中永久修改主机名为-magedu-org-过程" class="headerlink" title="4. 请写出在 CentOS6.10 和 Ubuntu1804 版本中永久修改主机名为 magedu.org 过程"></a>4. 请写出在 CentOS6.10 和 Ubuntu1804 版本中永久修改主机名为 magedu.org 过程</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">CentOS6.10 :</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostname</span></span><br><span class="line">localhost</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostname magedu.org</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># hostname</span></span><br><span class="line">magedu.org</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/network</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/sysconfig/network</span></span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=magedu.org</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ubuntu1804 :</span><br><span class="line"></span><br><span class="line">root@localhost:~<span class="comment"># </span></span><br><span class="line">root@localhost:~<span class="comment"># hostname</span></span><br><span class="line">localhost</span><br><span class="line">root@localhost:~<span class="comment"># </span></span><br><span class="line">root@localhost:~<span class="comment"># </span></span><br><span class="line">root@localhost:~<span class="comment"># hostnamectl set-hostname magedu.org</span></span><br><span class="line">root@localhost:~<span class="comment"># </span></span><br><span class="line">root@localhost:~<span class="comment"># hostname</span></span><br><span class="line">magedu.org</span><br><span class="line">root@localhost:~<span class="comment">#</span></span><br><span class="line">root@localhost:~<span class="comment"># cat /etc/hostname </span></span><br><span class="line">magedu.org</span><br><span class="line">root@localhost:~<span class="comment"># </span></span><br><span class="line">root@localhost:~<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h4 id="5-请写出-CentOS6-10，CentOS7-7，Ubuntu1804-中配置静态网络地址的过程，ip-地址为-192-168-100-100-子网掩码为-255-255-255-0"><a href="#5-请写出-CentOS6-10，CentOS7-7，Ubuntu1804-中配置静态网络地址的过程，ip-地址为-192-168-100-100-子网掩码为-255-255-255-0" class="headerlink" title="5. 请写出 CentOS6.10，CentOS7.7，Ubuntu1804 中配置静态网络地址的过程，ip 地址为 192.168.100.100 子网掩码为 255.255.255.0"></a>5. 请写出 CentOS6.10，CentOS7.7，Ubuntu1804 中配置静态网络地址的过程，ip 地址为 192.168.100.100 子网掩码为 255.255.255.0</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">CentOS6 和 CentOS7 :</span><br><span class="line"> </span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">NAME=<span class="string">"eth0"</span></span><br><span class="line">DEVICE=<span class="string">"eth0"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br><span class="line">IPADDR=192.168.100.100</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.100.1</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># service network restart</span></span><br><span class="line">Shutting down interface eth0:                              [  OK  ]</span><br><span class="line">Shutting down loopback interface:                          [  OK  ]</span><br><span class="line">Bringing up loopback interface:                            [  OK  ]</span><br><span class="line">Bringing up interface eth0:  </span><br><span class="line">Determining IP information <span class="keyword">for</span> eth0... <span class="keyword">done</span>.</span><br><span class="line">                                                           [  OK  ]</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ubuntu1804 :</span><br><span class="line"></span><br><span class="line">root@localhost:~<span class="comment">#   </span></span><br><span class="line">root@localhost:~<span class="comment"># cat /etc/netplan/50-cloud-init.yaml </span></span><br><span class="line"><span class="comment"># This file is generated from information provided by</span></span><br><span class="line"><span class="comment"># the datasource.  Changes to it will not persist across an instance.</span></span><br><span class="line"><span class="comment"># To disable cloud-init's network configuration capabilities, write a file</span></span><br><span class="line"><span class="comment"># /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg with the following:</span></span><br><span class="line"><span class="comment"># network: &#123;config: disabled&#125;</span></span><br><span class="line">network:</span><br><span class="line">    version: 2</span><br><span class="line">    renderer: networkd</span><br><span class="line">    ethernets:</span><br><span class="line">        eth0:</span><br><span class="line">            dhcp4: <span class="literal">false</span></span><br><span class="line">            addresses:</span><br><span class="line">                - 192.168.100.100/24</span><br><span class="line">            gateway4: 192.168.100.1</span><br><span class="line">            nameservers:</span><br><span class="line">                addresses: [223.5.5.5, 114.114.114.114]</span><br><span class="line">root@localhost:~<span class="comment">#  </span></span><br><span class="line">root@localhost:~<span class="comment"># netplan apply </span></span><br><span class="line">root@localhost:~<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h4 id="6-请说出为什么在-ping-服务器地址时不需要指明端口号的原因"><a href="#6-请说出为什么在-ping-服务器地址时不需要指明端口号的原因" class="headerlink" title="6. 请说出为什么在 ping 服务器地址时不需要指明端口号的原因"></a>6. 请说出为什么在 ping 服务器地址时不需要指明端口号的原因</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">icmp协议是IP层的附属协议，是介于IP层和TCP层之间的协议，一般认为属于IP层协议。IP协议用它来与其他主机或路由器交换错误报文和其他的一些网络情况,</span><br><span class="line">以此不需要端口</span><br></pre></td></tr></table></figure></div><h4 id="7-使用-awk-统计统计处理以下文件中每种域名出现的次数"><a href="#7-使用-awk-统计统计处理以下文件中每种域名出现的次数" class="headerlink" title="7. 使用 awk 统计统计处理以下文件中每种域名出现的次数"></a>7. 使用 awk 统计统计处理以下文件中每种域名出现的次数</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">http://www.baidu.com/index.html</span><br><span class="line">http://www.baidu.com/1.html</span><br><span class="line">http://post.baidu.com/index.html</span><br><span class="line">http://mp3.baidu.com/index.html</span><br><span class="line">http://www.baidu.com/3.html</span><br><span class="line">ftp://files.github.io/k8s.img</span><br><span class="line">http://post.baidu.com/2.html</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi file.txt </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat file.txt </span></span><br><span class="line">http://www.baidu.com/index.html</span><br><span class="line">http://www.baidu.com/1.html</span><br><span class="line">http://post.baidu.com/index.html</span><br><span class="line">http://mp3.baidu.com/index.html</span><br><span class="line">http://www.baidu.com/3.html</span><br><span class="line">ftp://files.github.io/k8s.img</span><br><span class="line">http://post.baidu.com/2.html</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat file.txt |awk -F'/' '&#123;a[$3]++&#125;END&#123;for(i in a)&#123;print i,a[i]&#125;&#125;'</span></span><br><span class="line">www.baidu.com 3</span><br><span class="line">files.github.io 1</span><br><span class="line">post.baidu.com 2</span><br><span class="line">mp3.baidu.com 1</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h4 id="8-CentOS7-6-系统中如何禁用-firewalld-服务？-禁用-firewalld-后，请写出-iptables-规则，要求仅对外开放-TCP-协议的-22、80、443-端口-配置生效后，如何才能确保系统重启后自动完成刚才的-iptables-规则配置？"><a href="#8-CentOS7-6-系统中如何禁用-firewalld-服务？-禁用-firewalld-后，请写出-iptables-规则，要求仅对外开放-TCP-协议的-22、80、443-端口-配置生效后，如何才能确保系统重启后自动完成刚才的-iptables-规则配置？" class="headerlink" title="8. CentOS7.6 系统中如何禁用 firewalld 服务？ 禁用 firewalld 后，请写出 iptables 规则，要求仅对外开放 TCP 协议的 22、80、443 端口; 配置生效后，如何才能确保系统重启后自动完成刚才的 iptables 规则配置？"></a>8. CentOS7.6 系统中如何禁用 firewalld 服务？ 禁用 firewalld 后，请写出 iptables 规则，要求仅对外开放 TCP 协议的 22、80、443 端口; 配置生效后，如何才能确保系统重启后自动完成刚才的 iptables 规则配置？</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">禁用 firewalld :</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl stop firewalld </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl disable firewalld</span></span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -vnL</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">配置防火墙规则 :</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -A INPUT -p tcp -m multiport --dport 22,80,443 -j ACCEPT</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -I INPUT 1 -m state --state ESTABLISHED,RELATED -j ACCEPT</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -A INPUT -j REJECT</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables -vnL</span></span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">  123  9720 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED</span><br><span class="line">  207 17208 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            multiport dports 22,80,443</span><br><span class="line">    3   234 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-port-unreachable</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 17 packets, 1660 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># iptables-save -c &gt; /etc/sysconfig/iptables</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install -y iptables-services</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">Package iptables-services-1.4.21-33.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to <span class="keyword">do</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl enable iptables</span></span><br><span class="line">Created symlink from /etc/systemd/system/basic.target.wants/iptables.service to /usr/lib/systemd/system/iptables.service.</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl restart iptables</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div><h4 id="9-请简述-httpd-的三种工作模式以及他们的特点（prefork-worker-Event）"><a href="#9-请简述-httpd-的三种工作模式以及他们的特点（prefork-worker-Event）" class="headerlink" title="9. 请简述 httpd 的三种工作模式以及他们的特点（prefork, worker, Event）"></a>9. 请简述 httpd 的三种工作模式以及他们的特点（prefork, worker, Event）</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.prefork : 预派生模式，有一个主控制进程，然后生成多个子进程，使用select模型，最大并发1024，每个子进程有一个独立</span><br><span class="line">的线程响应用户请求，相对比较占用内存，但是比较稳定，可以设置最大和最小进程数，是最古老的一种模式，也是最稳定的模式，  </span><br><span class="line">适用于访问量不是很大的场景。 优点：稳定 缺点：慢，占用资源，1024个进程不适用于高并发场景</span><br><span class="line"></span><br><span class="line">2.worker  ：一种多进程和多线程混合的模型，有一个控制进程，启动多个子进程，每个子进程里面包含固定的线程，使用线程来  </span><br><span class="line">处理请求，当线程不够使用的时候会再启动一个新的子进程，然后在进程里面再启动线程处理请求，由于其使用了线程处理请求，</span><br><span class="line">因此可以承受更高的并发。 优点：相比prefork 占用的内存较少，可以同时处理更多的请求。</span><br><span class="line">缺点：使用keepalive的长连接方式，某个线程会一直被占据，即使没有传输数据，也需要一直等待到超时才会被释放。如果过多的</span><br><span class="line">线程，被这样占据，也会导致在高并发场景下的无服务线程可用。（该问题在prefork模式下，同样会发生）</span><br><span class="line"></span><br><span class="line">3.event   ：Apache中最新的模式，2012年发布的apache 2.4.X系列正式支持event 模型，属于事件驱动模型(epoll)，每个进程</span><br><span class="line">响应多个请求，在现在版本里的已经是稳定可用的模式。它和worker模式很像，最大的区别在于，它解决了 keepalive 场景下，长</span><br><span class="line">期被占用的线程的资源浪费问题（某些线程因为被keepalive，空挂在哪里等待，中间几乎没有请求过来，甚至等到超时）。event MPM</span><br><span class="line">中，会有一个专门的线程来管理这些keepalive类型的线程，当有真实请求过来的时候，将请求传递给服务线程，执行完毕后，又允许它</span><br><span class="line">释放。这样增强了高并发场景下的请求处理能力。 优点：单线程响应多请求，占据更少的内存，高并发下表现更优秀，会有一个专门的线</span><br><span class="line">程来管理keep-alive类型的线程，当有真实请求过来的时候，将请求传递给服务线程，执行完毕后，又允许它释放 缺点：没有线程安全控</span><br><span class="line">制</span><br></pre></td></tr></table></figure></div><h4 id="10-CentOS7-系统有几个运行级别？-分别是什么？-如何将默认运行级别调整为字符界面？"><a href="#10-CentOS7-系统有几个运行级别？-分别是什么？-如何将默认运行级别调整为字符界面？" class="headerlink" title="10. CentOS7 系统有几个运行级别？ 分别是什么？ 如何将默认运行级别调整为字符界面？"></a>10. CentOS7 系统有几个运行级别？ 分别是什么？ 如何将默认运行级别调整为字符界面？</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CentOS7 中有 5 中运行级别，分别是 0 shutdown.target，1 emergency.target， 2 rescure.target，3  multi-user.target，</span><br><span class="line">5  graphical.target。</span><br><span class="line"></span><br><span class="line">设置默认运行级别可使用 systemctl set-default multi-user.target 命令完成</span><br></pre></td></tr></table></figure></div><h3 id="扩展题"><a href="#扩展题" class="headerlink" title="扩展题"></a>扩展题</h3><h4 id="1-使用-shell-脚本完成在一台-CentOS7-中编译安装-httpd2-4-39-和-php7-3-5-的-fpm-模式，实现-httpd-通过-socket-与-fpm-通信，-响应-phpinfo-信息页面请求，请写出详细过程。"><a href="#1-使用-shell-脚本完成在一台-CentOS7-中编译安装-httpd2-4-39-和-php7-3-5-的-fpm-模式，实现-httpd-通过-socket-与-fpm-通信，-响应-phpinfo-信息页面请求，请写出详细过程。" class="headerlink" title="1. 使用 shell 脚本完成在一台 CentOS7 中编译安装 httpd2.4.39 和 php7.3.5 的 fpm 模式，实现 httpd 通过 socket 与 fpm 通信， 响应 phpinfo 信息页面请求，请写出详细过程。"></a>1. 使用 shell 脚本完成在一台 CentOS7 中编译安装 httpd2.4.39 和 php7.3.5 的 fpm 模式，实现 httpd 通过 socket 与 fpm 通信， 响应 phpinfo 信息页面请求，请写出详细过程。</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat phpinstall.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1. choose a installation working path</span></span><br><span class="line">workingPath=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$workingPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2. set variables for software version</span></span><br><span class="line">httpdVersion=2.4.39</span><br><span class="line">aprVersion=1.7.0</span><br><span class="line">aprUtilVersion=1.6.1</span><br><span class="line">phpVersion=7.3.5</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. set function for compile installation</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_php</span></span>()&#123;</span><br><span class="line"><span class="comment">#3.1 Install Dependencies packages</span></span><br><span class="line">    yum clean all</span><br><span class="line">    yum makecache</span><br><span class="line"></span><br><span class="line">yum install -y epel-release wget libxml2-devel gcc pcre-devel openssl-devel expat-devel autoconf libtool gcc-c++</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.2 download source packages from official mirror, tar packages</span></span><br><span class="line">    wget https://www.php.net/distributions/php-<span class="variable">$&#123;phpVersion&#125;</span>.tar.bz2</span><br><span class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-<span class="variable">$&#123;aprVersion&#125;</span>.tar.gz</span><br><span class="line">wget http://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-util-<span class="variable">$&#123;aprUtilVersion&#125;</span>.tar.gz</span><br><span class="line"> wget https://mirrors.tuna.tsinghua.edu.cn/apache/httpd/httpd-<span class="variable">$&#123;httpdVersion&#125;</span>.tar.gz</span><br><span class="line">tar xvf httpd-<span class="variable">$&#123;httpdVersion&#125;</span>.tar.gz</span><br><span class="line">tar xvf apr-<span class="variable">$&#123;aprVersion&#125;</span>.tar.gz -C httpd-<span class="variable">$&#123;httpdVersion&#125;</span>/srclib/</span><br><span class="line">tar xvf apr-util-<span class="variable">$&#123;aprUtilVersion&#125;</span>.tar.gz -C httpd-<span class="variable">$&#123;httpdVersion&#125;</span>/srclib/</span><br><span class="line"><span class="built_in">cd</span> httpd-2.4.39/srclib/</span><br><span class="line">mv apr-<span class="variable">$&#123;aprVersion&#125;</span> apr</span><br><span class="line">mv apr-util-<span class="variable">$&#123;aprUtilVersion&#125;</span> apr-util</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.3 configure and make make install httpd</span></span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/httpd24 --<span class="built_in">enable</span>-so --<span class="built_in">enable</span>-ssl --<span class="built_in">enable</span>-cgi --<span class="built_in">enable</span>-rewrite --with-zlib --with-pcre --with-included-apr --<span class="built_in">enable</span>-modules=most --<span class="built_in">enable</span>-mpms-shared=all --with-mpm=prefork</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">echo</span> <span class="string">" make and make install"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">#3.4 add apache user for httpd daemon</span></span><br><span class="line">useradd -r apache -s /sbin/nologin </span><br><span class="line">     </span><br><span class="line"><span class="comment">#3.5 modify the http configs</span></span><br><span class="line">    sed -i <span class="string">'s@User = daemon@User = apache@'</span> /usr/<span class="built_in">local</span>/httpd24/conf/httpd.conf</span><br><span class="line">sed -i <span class="string">'s@Group = daemon@Group = apache@'</span> /usr/<span class="built_in">local</span>/httpd24/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /usr/<span class="built_in">local</span>/httpd24/conf/httpd.conf &lt;&lt;-EOF</span><br><span class="line">LoadModule proxy_module modules/mod_proxy.so</span><br><span class="line">LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so</span><br><span class="line">LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so</span><br><span class="line"></span><br><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPassMatch ^/(.*\.php)$ unix:/var/run/php-fpm.sock|fcgi://localhost/usr/<span class="built_in">local</span>/httpd24/htdocs/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;?php phpinfo(); ?&gt;'</span> &gt; /usr/<span class="built_in">local</span>/httpd24/htdocs/index.php</span><br><span class="line"></span><br><span class="line">        <span class="comment">#3.6 set httpd path to run apachectl</span></span><br><span class="line">cat &gt; /etc/profile.d/httpd.sh &lt;&lt;-EOF</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/httpd24/bin:\<span class="variable">$PATH</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.7 configue make make install php-fpm</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$workingPath</span></span><br><span class="line">tar xf php-7.3.5.tar.bz2</span><br><span class="line"><span class="built_in">cd</span> php-7.3.5</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php --<span class="built_in">enable</span>-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-openssl --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-config-file-path=/usr/loca/php/etc --with-config-file-scan-dir=/usr/<span class="built_in">local</span>/php/etc/php.d --<span class="built_in">enable</span>-mbstring --<span class="built_in">enable</span>-xml --<span class="built_in">enable</span>-sockets --<span class="built_in">enable</span>-fpm --<span class="built_in">enable</span>-maintainer-zts --<span class="built_in">disable</span>-fileinfo</span><br><span class="line">make -j 4</span><br><span class="line"></span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.8 config php-fpm</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/php/etc/</span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line"><span class="built_in">cd</span> php-fpm.d/</span><br><span class="line">    cp www.conf.default www.conf</span><br><span class="line"><span class="built_in">cd</span> /root/php-7.3.5/sapi/fpm</span><br><span class="line">cp init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod 755 /etc/init.d/php-fpm</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s@user = nobody@user = apache@'</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line">    sed -i <span class="string">'s@group = nobody@group = apache@'</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">'s@listen = 127.0.0.1:9000@listen = /var/run/php-fpm.sock@'</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">'s@;listen.mode = 0660@listen.mode = 0666@'</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. remove the installed software</span></span><br><span class="line"><span class="function"><span class="title">remove_php</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"remove php softwares"</span></span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/httpd24</span><br><span class="line">    rm -rf /usr/<span class="built_in">local</span>/php</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. choose functions</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$2</span> <span class="keyword">in</span></span><br><span class="line">install)</span><br><span class="line">     install_php</span><br><span class="line">     ;;</span><br><span class="line">remove)</span><br><span class="line">     remove_php</span><br><span class="line">     ;;</span><br><span class="line">*)</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">"Useage: <span class="variable">$0</span> <span class="variable">$1</span> install | remove"</span></span><br><span class="line">     ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># apachectl start </span></span><br><span class="line">[root@localhost ~]<span class="comment"># service php-fpm start</span></span><br><span class="line">[root@localhost ~]<span class="comment"># curl 127.0.0.1/index.php</span></span><br></pre></td></tr></table></figure></div><h4 id="2-httpd-服务器的访问日志保存在容量为-1T-的-dev-sdb-磁盘中，对应的挂载路径为-data-log，编写一个-shell-脚本，每隔一个小时测试一下该磁盘的使用率是否超过60-，如果超过立刻将-2-天之前的日志移动到远程服务器-172-18-0-100-服务器上，移动完成后，如果磁盘空间使用率依旧大于-70-则发邮件给-1794379915-qq-com-提示报警。请写出操作的主要过程。"><a href="#2-httpd-服务器的访问日志保存在容量为-1T-的-dev-sdb-磁盘中，对应的挂载路径为-data-log，编写一个-shell-脚本，每隔一个小时测试一下该磁盘的使用率是否超过60-，如果超过立刻将-2-天之前的日志移动到远程服务器-172-18-0-100-服务器上，移动完成后，如果磁盘空间使用率依旧大于-70-则发邮件给-1794379915-qq-com-提示报警。请写出操作的主要过程。" class="headerlink" title="2. httpd 服务器的访问日志保存在容量为 1T 的 /dev/sdb 磁盘中，对应的挂载路径为/data/log，编写一个 shell 脚本，每隔一个小时测试一下该磁盘的使用率是否超过60%，如果超过立刻将 2 天之前的日志移动到远程服务器 172.18.0.100 服务器上，移动完成后，如果磁盘空间使用率依旧大于 70%, 则发邮件给 1794379915@qq.com 提示报警。请写出操作的主要过程。"></a>2. httpd 服务器的访问日志保存在容量为 1T 的 /dev/sdb 磁盘中，对应的挂载路径为/data/log，编写一个 shell 脚本，每隔一个小时测试一下该磁盘的使用率是否超过60%，如果超过立刻将 2 天之前的日志移动到远程服务器 172.18.0.100 服务器上，移动完成后，如果磁盘空间使用率依旧大于 70%, 则发邮件给 <a href="mailto:1794379915@qq.com">1794379915@qq.com</a> 提示报警。请写出操作的主要过程。</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">配置邮件:</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum install mailx sendmail -y </span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.huaweicloud.com</span><br><span class="line"> * extras: mirrors.huaweicloud.com</span><br><span class="line"> * updates: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">Package mailx-12.5-19.el7.x86_64 already installed and latest version</span><br><span class="line">Package sendmail-8.14.7-5.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to <span class="keyword">do</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vi /etc/mail.rc </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># tail -n 4 /etc/mail.rc </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> from=1794379915@qq.com smtp=<span class="string">"smtp.qq.com"</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=<span class="string">"1794379915@qq.com"</span> smtp-auth-password=<span class="string">"whtobh67sdfsgroobf"</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mail -s 'warning' 1794379915@qq.com</span></span><br><span class="line">hello gordon</span><br><span class="line">.</span><br><span class="line">EOT</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">开启远程免密登录功能:</span><br><span class="line">[root@localhost ~]<span class="comment"># ssh-keygen </span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:PjMhaz8iVK6Hc6XcawNbHQS2svOe0qPAKPW5GlVIjgs root@localhost.localdomain</span><br><span class="line">The key is randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">|    .   o.       |</span><br><span class="line">|   + . . ..      |</span><br><span class="line">|E . o o ..       |</span><br><span class="line">| . . ..o  .      |</span><br><span class="line">|  o .o+ S. .     |</span><br><span class="line">| . =..o*o..      |</span><br><span class="line">|. o.=+oO*        |</span><br><span class="line">| . .=+OoB=       |</span><br><span class="line">|  ...=.===       |</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ssh-copy-id 172.18.0.100</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/root/.ssh/id_rsa.pub"</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to <span class="built_in">log</span> <span class="keyword">in</span> with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class="keyword">if</span> you are prompted now it is to install the new keys</span><br><span class="line">root@192.168.7.129 is password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">"ssh '172.18.0.100'"</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ssh 172.18.0.100</span></span><br><span class="line">Last login: Mon Oct 28 14:31:58 2019 from 172.18.0.200</span><br><span class="line">[root@localhost ~]<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line">Connection to 192.168.0.100 closed.</span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">编写shell功能脚本：</span><br><span class="line">[root@localhost ~]<span class="comment"># vi scripts/checkdisk.sh </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat scripts/checkdisk.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1. get the disk pcent value</span></span><br><span class="line">DiskPcent=`df /dev/sdb1 --output=<span class="built_in">source</span>,pcent  | awk -F<span class="string">'[ ]*|%'</span>  <span class="string">'/^\/dev\/sd/ &#123;print  $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.  judge DiskPcent and copy the file </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$DiskPcent</span> -gt 70 ] ;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"warning copy file !!"</span></span><br><span class="line">find /data/<span class="built_in">log</span> -mtime +2 -<span class="built_in">exec</span> scp &#123;&#125; 192.168.7.129:/root \;</span><br><span class="line">    find /data/<span class="built_in">log</span> -mtime +2 -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.  judge DiskPcent again and send mail to the option manager!</span></span><br><span class="line">DiskPcent=`df /dev/sdb1 --output=<span class="built_in">source</span>,pcent  | awk -F<span class="string">'[ ]*|%'</span>  <span class="string">'/^\/dev\/sd/ &#123;print  $2&#125;'</span>`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$DiskPcent</span> -gt 70 ] ;<span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"warning devsdb is full"</span> </span><br><span class="line">       <span class="built_in">echo</span> <span class="string">" please check the data disk"</span> | mail -s <span class="string">'warning'</span> 1794379915@qq.com</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#5. finish check disk one time</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"check over!!!!"</span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment"># </span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-请写出-5-个你熟悉的-Linux-软件服务的网络端口号和对应的软件名称。&quot;&gt;&lt;a href=&quot;#1-请写出-5-个你熟悉的-Linux-软件服务的网络端口号和对应的软件名称。&quot; class=&quot;headerlink&quot; title=&quot;1. 请写出 5 个你熟悉的
      
    
    </summary>
    
    
      <category term="linux" scheme="https://caohziming.net/categories/linux/"/>
    
    
      <category term="linux" scheme="https://caohziming.net/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>三次握手及四次挥手</title>
    <link href="https://caohziming.net/post/15747.html"/>
    <id>https://caohziming.net/post/15747.html</id>
    <published>2019-12-29T11:20:03.554Z</published>
    <updated>2019-12-30T00:18:43.127Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TCP报文格式"><a href="#TCP报文格式" class="headerlink" title="TCP报文格式"></a>TCP报文格式</h3><p><a href="https://img-blog.csdnimg.cn/20191229191434937.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191229191434937.png" class="lazyload"></a></p><ul><li>序号：Seq序号，占32位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。</li><li>确认序号：Ack序号，占32位，只有ACK标志位为1时，确认序号字段才有效，Ack=Seq+1。</li><li>标志位：共6个，即URG、ACK、PSH、RST、SYN、FIN等，具体含义如下：<ul><li>URG：紧急指针（urgent pointer）有效。</li><li>ACK：确认序号有效。</li><li>PSH：接收方应该尽快将这个报文交给应用层。</li><li>RST：重置连接。</li><li>SYN：发起一个新连接。</li><li>FIN：释放一个连接</li></ul></li></ul><p><strong>需要注意的是：</strong></p><ol><li>不要将确认序号Ack与标志位中的ACK搞混了</li><li>确认方Ack=发起方Req+1，两端配对</li></ol><h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>TCP(Transmission Control Protocol)　传输控制协议</p><p>TCP是主机对主机层的传输控制协议，提供可靠的连接服务，采用三次握手确认建立一个连接</p><p>位码即tcp标志位,有6种标示:</p><ul><li>SYN(synchronous建立联机)</li><li>ACK(acknowledgement 确认)</li><li>PSH(push传送)</li><li>FIN(finish结束)</li><li>RST(reset重置)</li><li>URG(urgent紧急)</li><li>Sequence number(顺序号码)</li><li>Acknowledge number(确认号码) </li><li>establish  建立，创建</li></ul><p>所谓三次握手（Three-Way Handshake）即建立TCP连接，是指建立一个TCP连接时，需要客户端和服务端总共发送3个包以确认连接的建立。在socket编程中，这一过程由客户端执行connect来触发，整个流程如下图所示：</p><p><a href="https://img-blog.csdnimg.cn/20191229191050948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191229191050948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><ul><li>第一次握手：Client将标志位SYN置为1，随机产生一个值seq=J，并将该数据包发送给Server，Client进入SYN_SENT状态，等待Server确认。</li><li>第二次握手：Server收到数据包后由标志位SYN=1知道Client请求建立连接，Server将标志位SYN和ACK都置为1，ack (number )=J+1，随机产生一个值seq=K，并将该数据包发送给Client以确认连接请求，Server进入SYN_RCVD状态。</li><li>第三次握手：Client收到确认后，检查ack是否为J+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=K+1，并将该数据包发送给Server，Server检查ack是否为K+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client与Server之间可以开始传输数据了。</li></ul><p><strong>SYN攻击：</strong>——————————————————-华丽的插播</p><p>三次握手过程中，Server发送SYN-ACK之后，收到Client的ACK之前的TCP连接称为半连接（half-open connect），此时Server处于SYN_RCVD状态，当收到ACK后，Server转入ESTABLISHED状态。SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server回复确认包，并等待Client的确认，由于源地址是不存在的，因此，Server需要不断重发直至超时，这些伪造的SYN包将长时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络堵塞甚至系统瘫痪。SYN攻击时一种典型的DDOS攻击，检测SYN攻击的方式非常简单，即当Server上有大量半连接状态且源IP地址是随机的，则可以断定遭到SYN攻击了，使用如下命令可以让之现行：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap |grep SYN_RECV</span><br></pre></td></tr></table></figure></div><h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p>三次握手耳熟能详，四次挥手估计就..所谓四次挥手（Four-Way Wavehand）即终止TCP连接，就是指断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发，整个流程如下图所示：</p><p><a href="https://img-blog.csdnimg.cn/20191229191116778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191229191116778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>由于TCP连接时全双工的，因此，每个方向都必须要单独进行关闭，这一原则是当一方完成数据发送任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只是意味着这一方向上没有数据流动了，即不会再收到数据了，但是在这个TCP连接上仍然能够发送数据，直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭，上图描述的即是如此。</p><ul><li>第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。</li><li>第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态</li><li>第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。</li><li>第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。</li></ul><p><strong>实际中还会出现同时发起主动关闭的情况</strong></p><p>具体流程如下图：<br><a href="https://img-blog.csdnimg.cn/20191229191357877.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191229191357877.png" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;TCP报文格式&quot;&gt;&lt;a href=&quot;#TCP报文格式&quot; class=&quot;headerlink&quot; title=&quot;TCP报文格式&quot;&gt;&lt;/a&gt;TCP报文格式&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://img-blog.csdnimg.cn/2019122919143
      
    
    </summary>
    
    
      <category term="linux" scheme="https://caohziming.net/categories/linux/"/>
    
    
      <category term="linux" scheme="https://caohziming.net/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu网卡设置</title>
    <link href="https://caohziming.net/post/62740.html"/>
    <id>https://caohziming.net/post/62740.html</id>
    <published>2019-12-28T06:08:45.000Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-更改⽹卡名称为eth"><a href="#1-更改⽹卡名称为eth" class="headerlink" title="1.更改⽹卡名称为eth*"></a>1.更改⽹卡名称为eth*</h1><p>如果没有在安装系统之前传递内核参数将⽹卡名称更改为eth*，则可以在安装系统之后使⽤以下⽅式修改：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">~$ sudo vim /etc/default/grub</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=2</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || <span class="built_in">echo</span> Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">""</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"net.ifnames=0 biosdevname=0"</span></span><br><span class="line">~$ sudo update-grub</span><br><span class="line">Sourcing file `/etc/default/grub<span class="string">'</span></span><br><span class="line"><span class="string">Generating grub configuration file ...</span></span><br><span class="line"><span class="string">Found linux image: /boot/vmlinuz-4.15.0-55-generic</span></span><br><span class="line"><span class="string">Found initrd image: /boot/initrd.img-4.15.0-55-generic</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">~$ sudo reboot</span></span><br></pre></td></tr></table></figure></div><h1 id="2-Ubuntu-⽹络配置"><a href="#2-Ubuntu-⽹络配置" class="headerlink" title="2. Ubuntu ⽹络配置"></a>2. Ubuntu ⽹络配置</h1><p><a href="https://netplan.io/" target="_blank" rel="noopener">https://netplan.io/</a> #官⽅⽂档</p><p><strong>Ubuntu 从 17.10 开始，已放弃在 /etc/network/interfaces ⾥固定IP的配置，⽽是改成 netplan ⽅式，<br>配置⽂件是：/etc/netplan/01-netcfg.yaml</strong></p><h2 id="ubuntu-17-04及之前的静态IP配置⽅式："><a href="#ubuntu-17-04及之前的静态IP配置⽅式：" class="headerlink" title="ubuntu 17.04及之前的静态IP配置⽅式："></a>ubuntu 17.04及之前的静态IP配置⽅式：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">~# cat &#x2F;etc&#x2F;network&#x2F;interfaces</span><br><span class="line">root@magedu:~# cat &#x2F;etc&#x2F;network&#x2F;interfaces</span><br><span class="line"># interfaces(5) file used by ifup(8) and ifdown(8)</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line">auto eth0 #⽹卡⾃启动，写⾃⼰要配置IP的实际⽹卡名称</span><br><span class="line">iface eth0 inet static #配置静态IP，写⾃⼰要配置IP的实际⽹卡名称</span><br><span class="line">address 172.18.3.12 #IP地址</span><br><span class="line">netmask 255.255.0.0 #掩码</span><br><span class="line">gateway 172.18.0.1 #⽹关</span><br><span class="line">dns-nameservers 223.6.6.6 #DNS</span><br><span class="line">dns-nameservers 223.5.5.5</span><br><span class="line">#重启⽹络服务</span><br><span class="line"> &#x2F;etc&#x2F;init.d&#x2F;networking restart</span><br><span class="line"> systemctl restart networking.service</span><br></pre></td></tr></table></figure></div><h2 id="ubuntu-18-04网卡配置"><a href="#ubuntu-18-04网卡配置" class="headerlink" title="ubuntu 18.04网卡配置"></a>ubuntu 18.04网卡配置</h2><p><strong>部分网卡提交上来之后格式不对， 请仔细比对</strong></p><h3 id="单⽹卡静态IP地址"><a href="#单⽹卡静态IP地址" class="headerlink" title="单⽹卡静态IP地址"></a>单⽹卡静态IP地址</h3><p><strong>ubuntu 18.04配置静态IP地址</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/netplan/01-netcfg.yaml</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">      addresses: [172.18.3.18/16]</span><br><span class="line">      gateway4: 172.18.0.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [223.6.6.6]</span><br><span class="line">sudo netplan apply</span><br><span class="line">vim ~/.vimrc <span class="comment">#取消vim ⾃动缩进功能</span></span><br><span class="line"><span class="built_in">set</span> paste</span><br></pre></td></tr></table></figure></div><h3 id="配置多⽹卡静态IP"><a href="#配置多⽹卡静态IP" class="headerlink" title="配置多⽹卡静态IP"></a>配置多⽹卡静态IP</h3><p><strong>ubuntu 18.04配置多⽹卡静态IP以及静态路由</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/netplan/01-netcfg.yaml</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">      addresses: [172.18.3.18/16]</span><br><span class="line">      gateway4: 172.18.0.1</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [223.6.6.6]</span><br><span class="line">    eth1:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">      addresses: [10.20.3.18/16]</span><br><span class="line">      routes:</span><br><span class="line">      - to: 172.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">      - to: 10.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">      - to: 10.2.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">      - to: 10.8.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line"> sudo netplan apply</span><br></pre></td></tr></table></figure></div><h3 id="单⽹卡桥接"><a href="#单⽹卡桥接" class="headerlink" title="单⽹卡桥接"></a>单⽹卡桥接</h3><p><strong>ubuntu 18.04的单⽹卡桥接配置</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> sudo cat /etc/netplan/01-netcfg.yaml</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">  bridges:</span><br><span class="line">br0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">  addresses: [172.18.3.18/16]</span><br><span class="line">    gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">    addresses: [223.6.6.6]</span><br><span class="line">  interfaces:</span><br><span class="line">- eth0</span><br><span class="line"> sudo netplan apply</span><br></pre></td></tr></table></figure></div><h3 id="多⽹卡桥接"><a href="#多⽹卡桥接" class="headerlink" title="多⽹卡桥接"></a>多⽹卡桥接</h3><p><strong>ubuntu 18.04的多⽹卡桥接配置，将br0和br1分别桥接到eth0和eth1</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/netplan/01-netcfg.yaml</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">eth1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  bridges:</span><br><span class="line">br0:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  addresses: [172.18.3.18/16]</span><br><span class="line">  gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">addresses: [223.6.6.6]</span><br><span class="line">  interfaces:</span><br><span class="line">- eth0</span><br><span class="line">br1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  addresses: [10.20.3.18/16]</span><br><span class="line">  routes:</span><br><span class="line">        - to: 172.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.2.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.8.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">  interfaces:</span><br><span class="line">- eth1</span><br></pre></td></tr></table></figure></div><h3 id="双⽹卡绑定"><a href="#双⽹卡绑定" class="headerlink" title="双⽹卡绑定"></a>双⽹卡绑定</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">第⼀种模式：mod=0，即：(balance-rr) Round-robin policy（平衡抡循环策略）</span><br><span class="line">特点：传输数据包顺序是依次传输（即：第1个包⾛eth0，下⼀个包就⾛eth1….⼀直循环下去，直到最后⼀个传输完</span><br><span class="line">毕），此模式提供负载平衡和容错能⼒。</span><br><span class="line"></span><br><span class="line">第⼆种模式：mod=1，即： (active-backup) Active-backup policy（主-备份策略）</span><br><span class="line">特点：只有⼀个设备处于活动状态，当⼀个宕掉另⼀个⻢上由备份转换为主设备。mac地址是外部可⻅得，从外⾯看</span><br><span class="line">来，bond的MAC地址是唯⼀的，以避免switch(交换机)发⽣混乱。此模式只提供了容错能⼒；由此可⻅此算法的优点</span><br><span class="line">是可以提供⾼⽹络连接的可⽤性，但是它的资源利⽤率较低，只有⼀个接⼝处于⼯作状态，在有 N 个⽹络接⼝的情况</span><br><span class="line">下，资源利⽤率为1/N。</span><br><span class="line"></span><br><span class="line">第三种模式：mod=2，即：(balance-xor) XOR policy（平衡策略）</span><br><span class="line">特点：基于指定的传输HASH策略传输数据包。缺省的策略是：(源MAC地址 XOR ⽬标MAC地址) % slave数量。其他</span><br><span class="line">的传输策略可以通过xmit<span class="emphasis">_hash_</span>policy选项指定，此模式提供负载平衡和容错能⼒。</span><br><span class="line"></span><br><span class="line">第四种模式：mod=3，即：broadcast（⼴播策略）</span><br><span class="line">特点：在每个slave接⼝上传输每个数据包，此模式提供了容错能⼒。</span><br><span class="line"></span><br><span class="line">第五种模式：mod=4，即：(802.3ad) IEEE 802.3adDynamic link aggregation（IEEE 802.3ad 动态链接聚合）</span><br><span class="line">特点：创建⼀个聚合组，它们共享同样的速率和双⼯设定。根据802.3ad规范将多个slave⼯作在同⼀个激活的聚合体</span><br><span class="line">下。</span><br><span class="line">必要条件：</span><br><span class="line">条件1：ethtool⽀持获取每个slave的速率和双⼯设定。</span><br><span class="line">条件2：switch(交换机)⽀持IEEE 802.3ad Dynamic link aggregation。</span><br><span class="line">条件3：⼤多数switch(交换机)需要经过特定配置才能⽀持802.3ad模式。</span><br><span class="line"></span><br><span class="line">第六种模式：mod=5，即：(balance-tlb) Adaptive transmit load balancing（适配器传输负载均衡）</span><br><span class="line">特点：不需要任何特别的switch(交换机)⽀持的通道bonding。在每个slave上根据当前的负载（根据速度计算）分</span><br><span class="line">配外出流量。如果正在接受数据的slave出故障了，另⼀个slave接管失败的slave的MAC地址。</span><br><span class="line">该模式的必要条件：</span><br><span class="line">ethtool⽀持获取每个slave的速率</span><br><span class="line"></span><br><span class="line">第七种模式：mod=6，即：(balance-alb) Adaptive load balancing（适配器适应性负载均衡）</span><br><span class="line">特点：该模式包含了balance-tlb模式，同时加上针对IPV4流量的接收负载均衡(receive load balance,</span><br><span class="line">rlb)，⽽且不需要任何switch(交换机)的⽀持。</span><br></pre></td></tr></table></figure></div><h3 id="ubuntu-18-04的双⽹卡绑定配置"><a href="#ubuntu-18-04的双⽹卡绑定配置" class="headerlink" title="ubuntu 18.04的双⽹卡绑定配置"></a>ubuntu 18.04的双⽹卡绑定配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">需要提前安装好bridge命令</span><br><span class="line">~<span class="comment"># sudo vim /etc/netplan/01-netcfg.yaml</span></span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  bonds:</span><br><span class="line">bond0:</span><br><span class="line">  interfaces:</span><br><span class="line">- eth0</span><br><span class="line">- eth1</span><br><span class="line">  addresses: [172.18.3.18/16]</span><br><span class="line">  gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">addresses: [223.6.6.6,223.5.5.5]</span><br><span class="line">  parameters:</span><br><span class="line">mode: active-backup</span><br><span class="line">mii-monitor-interval: 100</span><br><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure></div><h3 id="双⽹卡绑定-桥接"><a href="#双⽹卡绑定-桥接" class="headerlink" title="双⽹卡绑定+桥接"></a>双⽹卡绑定+桥接</h3><p><strong>⽹卡绑定⽤于提供⽹卡接⼝冗余以及⾼可⽤和端⼝聚合功能，桥接⽹卡再给需要桥接设备的服务使⽤。</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> sudo cat /etc/netplan/01-netcfg.yaml</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">    dhcp6: no</span><br><span class="line">  bonds:</span><br><span class="line">bond0:</span><br><span class="line">  interfaces:</span><br><span class="line">- eth0</span><br><span class="line">- eth1</span><br><span class="line">      <span class="comment">#addresses: [172.18.3.18/16]</span></span><br><span class="line">      <span class="comment">#gateway4: 172.18.0.1</span></span><br><span class="line">      <span class="comment">#nameservers:</span></span><br><span class="line">      <span class="comment"># addresses: [223.6.6.6,223.5.5.5]</span></span><br><span class="line">  parameters:</span><br><span class="line">    mode: active-backup</span><br><span class="line">mii-monitor-interval: 100</span><br><span class="line">  bridges:</span><br><span class="line">br0:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  addresses: [172.18.3.18/16]</span><br><span class="line">  gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">addresses: [223.6.6.6,223.5.5.5]</span><br><span class="line">  interfaces:</span><br><span class="line">- bond0</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></div><h3 id="内外多⽹卡绑定"><a href="#内外多⽹卡绑定" class="headerlink" title="内外多⽹卡绑定"></a>内外多⽹卡绑定</h3><p><strong>多⽹络情况下实现⽹卡绑定</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">~# sudo cat &#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml</span><br><span class="line"># This file describes the network interfaces available on your system</span><br><span class="line"># For more information, see netplan(5).</span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth2:</span><br><span class="line">      dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth3:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  bonds:</span><br><span class="line">bond0:</span><br><span class="line">  interfaces:</span><br><span class="line">        - eth0</span><br><span class="line">        - eth1</span><br><span class="line">  addresses: [172.18.3.18&#x2F;16]</span><br><span class="line">  gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">addresses: [223.6.6.6,223.5.5.5]</span><br><span class="line">  parameters:</span><br><span class="line">        mode: active-backup</span><br><span class="line">        mii-monitor-interval: 100</span><br><span class="line">    bond1:</span><br><span class="line">  interfaces:</span><br><span class="line">        - eth2</span><br><span class="line">        - eth3</span><br><span class="line">  addresses: [10.20.3.18&#x2F;16]</span><br><span class="line">  parameters:</span><br><span class="line">        mode: active-backup</span><br><span class="line">        mii-monitor-interval: 100</span><br><span class="line">  routes:</span><br><span class="line">        - to: 172.20.0.0&#x2F;16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.20.0.0&#x2F;16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.2.0.0&#x2F;16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.8.0.0&#x2F;16</span><br><span class="line">        via: 10.20.0.1</span><br></pre></td></tr></table></figure></div><h3 id="内⽹多⽹卡绑定-桥接"><a href="#内⽹多⽹卡绑定-桥接" class="headerlink" title="内⽹多⽹卡绑定+桥接"></a>内⽹多⽹卡绑定+桥接</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">~<span class="comment"># sudo cat /etc/netplan/01-netcfg.yaml</span></span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">eth0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">eth1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">eth2:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">eth3:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">  bonds:</span><br><span class="line">bond0:</span><br><span class="line">  interfaces:</span><br><span class="line">        - eth0</span><br><span class="line">        - eth1</span><br><span class="line">  parameters:</span><br><span class="line">        mode: active-backup</span><br><span class="line">        mii-monitor-interval: 100</span><br><span class="line">bond1:</span><br><span class="line">  interfaces:</span><br><span class="line">        - eth2</span><br><span class="line">        - eth3</span><br><span class="line">  parameters:</span><br><span class="line">        mode: active-backup</span><br><span class="line">        mii-monitor-interval: 100</span><br><span class="line">  bridges:</span><br><span class="line">br0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">      addresses: [172.18.3.18/16]</span><br><span class="line">      gateway4: 172.18.0.1</span><br><span class="line">  nameservers:</span><br><span class="line">addresses: [223.6.6.6,223.5.5.5]</span><br><span class="line">  interfaces:</span><br><span class="line">- bond0</span><br><span class="line">  br1:</span><br><span class="line">  dhcp4: no</span><br><span class="line">  dhcp6: no</span><br><span class="line">  interfaces:</span><br><span class="line">- bond1</span><br><span class="line">  addresses: [10.20.3.18/16]</span><br><span class="line">  routes:</span><br><span class="line">        - to: 172.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.20.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.2.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br><span class="line">        - to: 10.8.0.0/16</span><br><span class="line">        via: 10.20.0.1</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-更改⽹卡名称为eth&quot;&gt;&lt;a href=&quot;#1-更改⽹卡名称为eth&quot; class=&quot;headerlink&quot; title=&quot;1.更改⽹卡名称为eth*&quot;&gt;&lt;/a&gt;1.更改⽹卡名称为eth*&lt;/h1&gt;&lt;p&gt;如果没有在安装系统之前传递内核参数将⽹卡名称更改为eth
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://caohziming.net/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://caohziming.net/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>iptables 思维导图</title>
    <link href="https://caohziming.net/post/14251.html"/>
    <id>https://caohziming.net/post/14251.html</id>
    <published>2019-12-28T03:24:36.000Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://img-blog.csdnimg.cn/20191219231851601.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191219231851601.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://img-blog.csdnimg.cn/20191219231851601.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6
      
    
    </summary>
    
    
      <category term="iptables" scheme="https://caohziming.net/categories/iptables/"/>
    
    
      <category term="iptables" scheme="https://caohziming.net/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>防火墙</title>
    <link href="https://caohziming.net/post/17818.html"/>
    <id>https://caohziming.net/post/17818.html</id>
    <published>2019-12-28T03:24:36.000Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-防火墙"><a href="#Linux-防火墙" class="headerlink" title="Linux 防火墙"></a>Linux 防火墙</h1><h2 id="1-安全技术和防火墙"><a href="#1-安全技术和防火墙" class="headerlink" title="1 安全技术和防火墙"></a>1 安全技术和防火墙</h2><h3 id="1-1-安全技术"><a href="#1-1-安全技术" class="headerlink" title="1.1 安全技术"></a>1.1 安全技术</h3><ul><li>入侵检测与管理系统（Intrusion Detection Systems）：特点是不阻断任何网络访问，量化、定位来自内外网络的威胁情况，主要以提供报告和事后监督为主，提供有针对性的指导措施和安全决策依据。一般采用旁路部署方式</li><li>入侵防御系统（Intrusion Prevention System）：以透明模式工作，分析数据包的内容如：溢出<br>攻击、拒绝服务攻击、木马、蠕虫、系统漏洞等进行准确的分析判断，在判定为攻击行为后立即予以阻断，主动而有效的保护网络的安全，一般采用在线部署方式</li><li>防火墙（ FireWall ）：隔离功能，工作在网络或主机边缘，对进出网络或主机的数据包基于一定<br>的规则检查，并在匹配某规则时由规则定义的行为进行处理的一组功能的组件，基本上的实现都是默认情况下关闭所有的通过型访问，只开放允许访问的策略</li></ul><h3 id="1-2-防火墙的分类"><a href="#1-2-防火墙的分类" class="headerlink" title="1.2 防火墙的分类"></a>1.2 防火墙的分类</h3><ul><li>按保护范围划分：<ul><li>主机防火墙：服务范围为当前主机</li><li>网络防火墙：服务范围为防火墙一侧的局域网</li></ul></li><li>按实现方式划分:<ul><li>硬件防火墙：在专用硬件级别实现部分功能的防火墙；另一个部分功能基于软件实现，如：华为，天融信Checkpoint，NetScreen等 </li><li>软件防火墙：运行于通用硬件平台之上的防火墙的应用软件</li></ul></li><li>按网络协议划分：<ul><li>网络层防火墙：OSI模型下四层</li><li>应用层防火墙/代理服务器：代理网关，OSI模型七层</li></ul></li></ul><p><strong>包过滤防火墙</strong> </p><p><a href="https://img-blog.csdnimg.cn/20191220193007875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191220193007875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>网络层对数据包进行选择，选择的依据是系统内设置的过滤逻辑，被称为访问控制列表（ACL），通过检查数据流中每个数据的源地址，目的地址，所用端口号和协议状态等因素，或他们的组合来确定是否允许该数据包通过<br>优点：对用户来说透明，处理速度快且易于维护<br>缺点：无法检查应用层数据，如病毒等</p><p><strong>应用层防火墙</strong></p><p><a href="https://img-blog.csdnimg.cn/20191220194021173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191220194021173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>应用层防火墙/代理服务型防火墙，也称为代理服务器（Proxy Server)<br>将所有跨越防火墙的网络通信链路分为两段内外网用户的访问都是通过代理服务器上的“链接”来实现<br>优点：在应用层对数据进行检查，比较安全<br>缺点：增加防火墙的负载</p><ul><li>**提示：现实生产环境中所使用的防火墙一般都是二者结合体，即先检查网络数据，通过之后再送到应用层去检查</li></ul><h2 id="2-防火墙工具介绍"><a href="#2-防火墙工具介绍" class="headerlink" title="2 防火墙工具介绍"></a>2 防火墙工具介绍</h2><h3 id="2-1-iptables"><a href="#2-1-iptables" class="headerlink" title="2.1 iptables"></a>2.1 iptables</h3><p>由软件包iptables提供的命令行工具，工作在用户空间，用来编写规则，写好的规则被送往netfilter，告诉内核如何去处理信息包</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]<span class="comment"># iptables --version</span></span><br><span class="line">iptables v1.8.2 (nf_tables)</span><br><span class="line">[root@centos8 ~]<span class="comment">#ll /usr/sbin/iptables</span></span><br><span class="line">lrwxrwxrwx. 1 root root 17 May 11 2019 /usr/sbin/iptables -&gt; xtables-nft-multi</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment">#ll /usr/sbin/iptables</span></span><br><span class="line">lrwxrwxrwx. 1 root root 13 Dec 9 2018 /usr/sbin/iptables -&gt; xtables-multi</span><br><span class="line">[root@centos7 ~]<span class="comment"># iptables --version</span></span><br><span class="line">iptables v1.4.21</span><br><span class="line"></span><br><span class="line">[root@centos6 ~]<span class="comment">#iptables --version</span></span><br><span class="line">iptables v1.4.7</span><br><span class="line">[root@centos6 ~]<span class="comment">#ll /sbin/iptables</span></span><br><span class="line">lrwxrwxrwx. 1 root root 33 Dec 12 2018 /sbin/iptables -&gt;</span><br><span class="line">/etc/alternatives/iptables.x86_64</span><br><span class="line">[root@centos6 ~]<span class="comment">#ll /etc/alternatives/iptables.x86_64</span></span><br><span class="line">lrwxrwxrwx. 1 root root 20 Dec 12 2018 /etc/alternatives/iptables.x86_64 -&gt;</span><br><span class="line">/sbin/iptables-1.4.7</span><br><span class="line">[root@centos6 ~]<span class="comment">#ll /sbin/iptables</span></span><br><span class="line">lrwxrwxrwx. 1 root root 33 Dec 12 2018 /sbin/iptables -&gt; /etc/alternatives/iptables.x86_64</span><br></pre></td></tr></table></figure></div><h3 id="2-2-firewalld"><a href="#2-2-firewalld" class="headerlink" title="2.2 firewalld"></a>2.2 firewalld</h3><p>从CentOS 7 版开始引入了新的前端管理工具</p><ul><li>软件包：<ul><li>firewalld<ul><li>firewalld-config</li></ul></li></ul></li><li>管理工具：<ul><li>firewall-cmd 命令行工具<ul><li>firewall-config 图形工作</li></ul></li></ul></li></ul><h3 id="2-3-nftables"><a href="#2-3-nftables" class="headerlink" title="2.3 nftables"></a>2.3 nftables</h3><p>此软件是CentOS 8 新特性,Nftables最初在法国巴黎的Netfilter Workshop 2008上发表，然后由长期的netfilter核心团队成员和项目负责人Patrick McHardy于2009年3月发布。它在2013年末合并到Linux内核中，自2014年以来已在内核3.13中可用。它重用了netfilter框架的许多部分，例如连接跟踪和NAT功能。它还保留了命名法和基本iptables设计的几个部分，例如表，链和规则。就像iptables一样，表充当链的容器，并且链包含单独的规则，这些规则可以执行操作，例如丢弃数据包，移至下一个规则或跳至新链。从用户的角度来看，nftables添加了一个名为nft的新工具，该工具替代了iptables，arptables和ebtables中的所有其他工具。从体系结构的角度来看，它还替换了内核中处理数据包过滤规则集运行时评估的那些部分。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]<span class="comment">#rpm -qi nftables</span></span><br><span class="line">Name : nftables</span><br><span class="line">Epoch : 1</span><br><span class="line">Version : 0.9.0</span><br><span class="line">Release : 8.el8</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Wed 25 Sep 2019 09:29:06 PM CST</span><br><span class="line">Group : Unspecified</span><br><span class="line">Size : 758622</span><br><span class="line">License : GPLv2</span><br><span class="line">Signature : RSA/SHA256, Tue 02 Jul 2019 08:19:09 AM CST, Key ID</span><br><span class="line">05b555b38483c65d</span><br><span class="line">Source RPM : nftables-0.9.0-8.el8.src.rpm</span><br><span class="line">Build Date : Sat 11 May 2019 11:06:46 PM CST</span><br><span class="line">Build Host : x86-01.mbox.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager : CentOS Buildsys &lt;bugs@centos.org&gt;</span><br><span class="line">Vendor : CentOS</span><br><span class="line">URL : http://netfilter.org/projects/nftables/</span><br><span class="line">Summary : Netfilter Tables userspace utillites</span><br><span class="line">Description :</span><br><span class="line">Netfilter Tables userspace utilities.</span><br></pre></td></tr></table></figure></div><h2 id="3-netfilter-中五个勾子函数和报文流向"><a href="#3-netfilter-中五个勾子函数和报文流向" class="headerlink" title="3 netfilter 中五个勾子函数和报文流向"></a>3 netfilter 中五个勾子函数和报文流向</h2><p>Netfilter在内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具(iptables）向其写入规则<br>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上</p><p><a href="https://img-blog.csdnimg.cn/20191220195118511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191220195118511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p><strong>提示：从 Linux kernel 4.2 版以后，Netfilter 在prerouting 前加了一个 ingress 勾子函数。可以使用这个新的入口挂钩来过滤来自第2层的流量，这个新挂钩比预路由要早，基本上是 tc 命令（流量控制工具）的替代品</strong></p><p><strong>三种报文流向</strong></p><ul><li>流入本机：PREROUTING –&gt; INPUT–&gt;用户空间进程<ul><li>流出本机：用户空间进程 –&gt;OUTPUT–&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-防火墙&quot;&gt;&lt;a href=&quot;#Linux-防火墙&quot; class=&quot;headerlink&quot; title=&quot;Linux 防火墙&quot;&gt;&lt;/a&gt;Linux 防火墙&lt;/h1&gt;&lt;h2 id=&quot;1-安全技术和防火墙&quot;&gt;&lt;a href=&quot;#1-安全技术和防火墙&quot; cla
      
    
    </summary>
    
    
      <category term="iptables" scheme="https://caohziming.net/categories/iptables/"/>
    
    
      <category term="iptables" scheme="https://caohziming.net/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>Shell脚本基础</title>
    <link href="https://caohziming.net/post/52139.html"/>
    <id>https://caohziming.net/post/52139.html</id>
    <published>2019-12-28T03:24:36.000Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<p>﻿## Shell</p><p>#在此感谢WEB洋仔</p><h2 id="shell脚本？"><a href="#shell脚本？" class="headerlink" title="shell脚本？"></a>shell脚本？</h2><p>在说什么是shell脚本之前，先说说什么是shell**</p><p>shell是外壳的意思，就是操作系统的外壳。我们可以通过shell命令来操作和控制操作系统，比如Linux中的Shell命令就包括ls、cd、pwd等等。总结来说，Shell是一个命令解释器，它通过接受用户输入的Shell命令来启动、暂停、停止程序的运行或对计算机进行控制。</p><p>shell 是一个应用程序，它连接了用户和 Linux 内核，让用户能够更加高效、安全、低成本地使用 Linux 内核，这就是 Shell 的本质。</p><p>shell 本身并不是内核的一部分，它只是站在内核的基础上编写的一个应用程序。<br><strong>那么什么是shell脚本呢？</strong></p><p>shell脚本就是由Shell命令组成的执行文件，将一些命令整合到一个文件中，进行处理业务逻辑，脚本不用编译即可运行。它通过解释器解释运行，所以速度相对来说比较慢。</p><p>shell脚本中最重要的就是对shell命令的使用与组合，再使用shell脚本支持的一些语言特性，完成想要的功能。</p><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>“# ”开头的就是注释，被编译器忽略</p><ul><li>单行注释： #</li><li>多行注释： :&lt;&lt;EOF … EOF 或者 :&lt;&lt;! … ! （:&lt;&lt; 标识多行注释开始，并指定一个标识符作为开始结束的标志）</li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h3><p><strong>运行shell时，会同时存在三种变量：</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">局部变量：局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。</span><br><span class="line">环境变量：所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。</span><br><span class="line"></span><br><span class="line">shell变量：shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行</span><br></pre></td></tr></table></figure></div><p><strong>变量操作</strong></p><ul><li>创建普通变量： name=“test” （=两边不可有空格）</li><li>创建只可函数体中使用的局部变量： local name=“test” （使用local修饰的变量在函数体外无法访问，并且local只能在函数体内使用）</li><li>使用变量： echo $name 或者 echo ${name} （推荐使用大括号版）</li><li>变量重新赋值： name=“new_test” （将原值覆盖）</li><li>只读变量： name=“only_read” -&gt; readonly name （使用readonly标识后的变量，不可被修改</li><li>删除变量： unset name; （删除之后不可访问，删除不掉只读变量）</li></ul><p><strong>字符串变量</strong></p><p>1）单引号</p><p>单引号变量</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">单引号变量 var=<span class="string">'test'</span> ，只能原样输出，变量无效</span><br><span class="line">单引号中不能出现一个单独的单引号，转义也不可以</span><br></pre></td></tr></table></figure></div><p>2）双引号</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">双引号变量 var=<span class="string">"my name is <span class="variable">$&#123;name&#125;</span>"</span>，变量有效</span><br><span class="line">可出现转义符</span><br></pre></td></tr></table></figure></div><p>3）拼接字符串</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">中间无任何+，之类的字符</span><br><span class="line">name=“this is”<span class="string">" my name"</span>; name=“this is my name”; name=“this” is “my name” 等效</span><br><span class="line">name=‘this is’’ my nam’; name=‘this is my name’; name=‘this’ is ‘my name’ 等效</span><br></pre></td></tr></table></figure></div><p>4）获取字符串长度</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在<span class="variable">$&#123;&#125;</span>中使用“<span class="comment">#”获取长度</span></span><br><span class="line">name=“<span class="built_in">test</span>”;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>; <span class="comment"># 输出为4</span></span><br></pre></td></tr></table></figure></div><p>5）提取子字符串</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1:4 从第2个开始 往后截取4个字符</span><br><span class="line">::4 从第一个字符开始 往后截取4个字符</span><br><span class="line">name=“this is my name”;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:1:4&#125;</span> <span class="comment">#输出 is i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name::4&#125;</span> <span class="comment">#输出 this</span></span><br></pre></td></tr></table></figure></div><p><strong>数组</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">bash只支持一维数组，不支持多维数组</span><br><span class="line"></span><br><span class="line">定义数组：array_name=(li wang xiang zhang) （小括号做边界、使用空格分离）</span><br><span class="line">单独定义数组的元素： array_para[0]=“w”; array_para[3]=“s” （定义时下标不连续也可以）</span><br><span class="line">赋值数组元素：array_name[0]=“zhao”;</span><br><span class="line">获取数组元素：</span><br><span class="line">array_name[0]=“li”</span><br><span class="line">array_name[3]=“zhang”</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[0]&#125;</span> <span class="comment"># 输出"li"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[1]&#125;</span> <span class="comment"># 输出" "</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[3]&#125;</span> <span class="comment"># 输出"zhang"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[@]&#125;</span> <span class="comment"># 输出"li zhang" 输出数组所有元素，没有元素的下标省略</span></span><br><span class="line">取得元素个数：<span class="variable">$&#123;#array_name[@]&#125;</span> 或者 <span class="variable">$&#123;#array_name[*]&#125;</span></span><br><span class="line">取得单个元素长度：<span class="variable">$&#123;#array_name[1]&#125;</span></span><br></pre></td></tr></table></figure></div><h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><p>获取参数值：<br>    $0 ： 固定，代表执行的文件名<br>    $1 ： 代表传入的第1个参数<br>    $n ： 代表传入的第n个参数<br>$#：参数个数<br>$<em>： 以一个单字符串显示所有向脚本传递的参数。如”$<em>“用「”」括起来的情况、以”$1 $2 … $n”的形式输出所有参数<br>$@：与$</em>相同，但是使用时加引号，并在引号中返回每个参数。<br>$$：脚本运行的当前进程号<br>$！：后台运行的最后一个进程的ID<br>$?： 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。<br>$</em> 与 $@ 区别<br>    相同点：都是引用所有参数。<br>    不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 “ * “ 等价于 “1 2 3”（传递了一个参数），而 “@” 等价于 “1” “2” “3”（传递了三个参数）。</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p><strong>算数运算</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ 、-、*、\ ： 乘号前必须加\进行转义才可以进行乘法运算</span><br><span class="line"></span><br><span class="line">加法运算</span><br><span class="line">val=`expr 2 + 2` （使用linux命令expr进行辅助运算）</span><br><span class="line">val=$[2+2] （4个空格不是必要的，不同于条件判断）</span><br><span class="line">val=$((2+2))</span><br></pre></td></tr></table></figure></div><p><strong>数字关系运算符</strong></p><p>关系运算符只支持数字，不支持字符串，除非字符串的值是数字。<br>下面假定变量 a 为 10，变量 b 为 20</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-eq：检测两个数是否相等，相等返回 <span class="literal">true</span>。[ <span class="variable">$a</span> -eq <span class="variable">$b</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-ne：检测两个数是否不相等，不相等返回 <span class="literal">true</span>。[ <span class="variable">$a</span> -ne <span class="variable">$b</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-gt：检测左边的数是否大于右边的，如果是，则返回 <span class="literal">true</span>。 [ <span class="variable">$a</span> -gt <span class="variable">$b</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-lt：检测左边的数是否小于右边的，如果是，则返回 <span class="literal">true</span>。[ <span class="variable">$a</span> -lt <span class="variable">$b</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-ge：检测左边的数是否大于等于右边的，如果是，则返回 <span class="literal">true</span>。 [ <span class="variable">$a</span> -ge <span class="variable">$b</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-le：检测左边的数是否小于等于右边的，如果是，则返回 <span class="literal">true</span>。 [ <span class="variable">$a</span> -le <span class="variable">$b</span> ] 返回 <span class="literal">true</span>。</span><br></pre></td></tr></table></figure></div><p><strong>字符串运算符</strong></p><p>常用的字符串运算符，假定变量 a 为 “abc”，变量 b 为 “efg”：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">=：检测两个字符串是否相等，相等返回 <span class="literal">true</span>。[ <span class="variable">$a</span> = <span class="variable">$b</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">!=：检测两个字符串是否相等，不相等返回 <span class="literal">true</span>。[ <span class="variable">$a</span> != <span class="variable">$b</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-z：检测字符串长度是否为0，为0返回 <span class="literal">true</span>。[ -z <span class="variable">$a</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-n：检测字符串长度是否为0，不为0返回 <span class="literal">true</span>。[ -n “<span class="variable">$a</span>” ] 返回 <span class="literal">true</span>。</span><br><span class="line">$ ：检测字符串是否为空，不为空返回 <span class="literal">true</span>。[ <span class="variable">$a</span> ] 返回 <span class="literal">true</span>。</span><br></pre></td></tr></table></figure></div><p><strong>布尔运算符</strong></p><p>常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!：非运算，表达式为 <span class="literal">true</span> 则返回 <span class="literal">false</span>，否则返回 <span class="literal">true</span>。[ ! <span class="literal">false</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-o：或运算，有一个表达式为 <span class="literal">true</span> 则返回 <span class="literal">true</span>。[ <span class="variable">$a</span> -lt 20 -o <span class="variable">$b</span> -gt 100 ] 返回 <span class="literal">true</span>。</span><br><span class="line">-a：与运算，两个表达式都为 <span class="literal">true</span> 才返回 <span class="literal">true</span>。[ <span class="variable">$a</span> -lt 20 -a <span class="variable">$b</span> -gt 100 ] 返回<span class="literal">false</span>。</span><br></pre></td></tr></table></figure></div><p><strong>逻辑运算符</strong></p><p> Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp;：逻辑的 AND[[ <span class="variable">$a</span> -lt 100 &amp;&amp; <span class="variable">$b</span> -gt 100 ]] 返回 <span class="literal">false</span></span><br><span class="line">||：逻辑的 OR[[ <span class="variable">$a</span> -lt 100 || <span class="variable">$b</span> -gt 100 ]] 返回 <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p><strong>文件运算符</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-b file：检测文件是否是块设备文件，如果是，则返回 <span class="literal">true</span>。[ -b <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-c file：检测文件是否是字符设备文件，如果是，则返回 <span class="literal">true</span>。[ -c <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-d file：检测文件是否是目录，如果是，则返回 <span class="literal">true</span>。[ -d <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-f file：检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 <span class="literal">true</span>。[ -f <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-g file：检测文件是否设置了 SGID 位，如果是，则返回 <span class="literal">true</span>。[ -g <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-k file：检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 <span class="literal">true</span>。[ -k <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-p file：检测文件是否是有名管道，如果是，则返回 <span class="literal">true</span>。[ -p <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-u file：检测文件是否设置了 SUID 位，如果是，则返回 <span class="literal">true</span>。[ -u <span class="variable">$file</span> ] 返回 <span class="literal">false</span>。</span><br><span class="line">-r file：检测文件是否可读，如果是，则返回 <span class="literal">true</span>。[ -r <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-w file：检测文件是否可写，如果是，则返回 <span class="literal">true</span>。[ -w <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-x file ：检测文件是否可执行，如果是，则返回 <span class="literal">true</span>。[ -x <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-s file：检测文件是否为空（文件大小是否大于0），不为空返回 <span class="literal">true</span>。[ -s <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br><span class="line">-e file：检测文件（包括目录）是否存在，如果是，则返回 <span class="literal">true</span>。[ -e <span class="variable">$file</span> ] 返回 <span class="literal">true</span>。</span><br></pre></td></tr></table></figure></div><h3 id="执行相关"><a href="#执行相关" class="headerlink" title="执行相关"></a>执行相关</h3><p><strong>命令替换</strong></p><p>命令替换与变量替换差不多，都是用来重组命令行的，先完成引号里的命令行，然后将其结果替换出来，再重组成新的命令行。<br>执行命令：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`ls /etc` ： 反引号 （所有的unix系统都支持）</span><br><span class="line">$(ls /etc) ： $+() （部分unix系统不支持）</span><br><span class="line">多个嵌套使用时，从内向外执行</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> \s /etc\ 或 <span class="keyword">for</span> file <span class="keyword">in</span> $(ls /etc) 循环中使用</span><br><span class="line">`dirname <span class="variable">$0</span>` 获取脚本文件所在的目录</span><br><span class="line">path=$(<span class="built_in">cd</span> `dirname <span class="variable">$0</span>`;<span class="built_in">pwd</span>) ： 获取脚本当前所在目录，并且执行<span class="built_in">cd</span>命令到达该目录，使用<span class="built_in">pwd</span>获取路径并赋值到path变量</span><br></pre></td></tr></table></figure></div><p><strong>算术运算</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$[ ] : 加减乘除,不必添加空格</span><br><span class="line">$(( )) ：加减乘除等,不必添加空格</span><br></pre></td></tr></table></figure></div><p><strong>逻辑判断</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ ] ： 中括号旁边和运算符两边必须添加空格 （可以使用，不推荐）</span><br><span class="line">[[ ]]：中括号旁边和运算符两边必须添加空格 （字符串验证时，推荐使用）</span><br><span class="line">(()) ： 中括号旁边和运算符两边必须添加空格 （数字验证时，推荐使用）</span><br><span class="line">[[]] 和 (()) 分别是[ ]的针对数学比较表达式和字符串表达式的加强版。</span><br><span class="line">使用[[ … ]]条件判断结构，而不是[ … ]，能够防止脚本中的许多逻辑错误。比如，&amp;&amp;、||、&lt;和&gt; 操作符能够正常存在于[[ ]]条件判断结构中，但是如果出现在[ ]结构中的话，会报错。比如可以直接使用<span class="keyword">if</span> [[ <span class="variable">$a</span> != 1 &amp;&amp; <span class="variable">$a</span> != 2 ]], 如果不适用双括号, 则为<span class="keyword">if</span> [ <span class="variable">$a</span> -ne 1] &amp;&amp; [ <span class="variable">$a</span> != 2 ]或者<span class="keyword">if</span> [ <span class="variable">$a</span> -ne 1 -a <span class="variable">$a</span> != 2 ]。</span><br><span class="line">[[ ]]中增加模式匹配特效；</span><br><span class="line">(( ))不需要再将表达式里面的大小于符号转义，除了可以使用标准的数学运算符外，还增加了以下符号</span><br></pre></td></tr></table></figure></div><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3nIpyMf0-1577592165804)(E:\总结所需图片\Snipaste_2019-12-28_21-41-53.png)]</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p><strong>echo</strong></p><p>仅用于字符串的输出，没有使用printf作为输出的移植性好，建议使用printf</p><p><strong>printf</strong></p><p>printf 不会像 echo 自动添加换行符，我们可以手动添加 \n<br>无大括号，直接以空格分隔</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">格式：printf format-string [arguments...] 其中（format-string: 格式控制字符串、arguments: 参数列表）</span><br><span class="line">案例：printf "%-10s %-8s %-4.2f\n" 郭靖 男 </span><br><span class="line">%s %c %d %f 都是格式替代符</span><br><span class="line"><span class="code">d：Decimal 十进制整数 对应位置参数必须是十进制整数，否则报错!</span></span><br><span class="line"><span class="code">s：String 字符串 对应位置参数必须是字符串或者字符型 否则报错</span></span><br><span class="line"><span class="code">c：Char 字符 对应位置参数必须是字符串或者字符型 否则报错</span></span><br><span class="line"><span class="code">f：Float 浮点 对应位置参数必须是数字型 否则报错</span></span><br><span class="line">%-10s ： 指一个宽度为10个字符（-表示左对齐，没有则表示右对齐），任何字符都会被显示在10个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。</span><br><span class="line">%-4.2f ：指格式化为小数，宽度为4个字符，其中.2指保留2位小数。</span><br><span class="line">转义符：</span><br><span class="line"><span class="code">    \a：警告字符，通常为ASCII的BEL字符</span></span><br><span class="line"><span class="code">    \b：后退</span></span><br><span class="line"><span class="code">    \c：抑制（不显示）输出结果中任何结尾的换行字符（只在%b格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略</span></span><br><span class="line"><span class="code">    \f：换页（formfeed）</span></span><br><span class="line"><span class="code">    \n：换行</span></span><br><span class="line"><span class="code">    \r：回车（Carriage return）</span></span><br><span class="line"><span class="code">    \t：水平制表符</span></span><br><span class="line"><span class="code">    \v：垂直制表符</span></span><br><span class="line"><span class="code">    \：一个字面上的反斜杠字符</span></span><br><span class="line"><span class="code">    \ddd：表示1到3位数八进制值的字符。仅在格式字符串中有效</span></span><br><span class="line"><span class="code">    \0ddd：表示1到3位的八进制值字符</span></span><br></pre></td></tr></table></figure></div><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p>和Java、PHP等语言不一样，sh的流程控制不可为空，即if或者else的大括号中无任何语句</p><p><strong>if else</strong></p><ul><li><p>if </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition;<span class="keyword">then</span></span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 例子：</span></span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p>if else</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition;<span class="keyword">then</span></span><br><span class="line">    command1 </span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">command</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 例子：</span></span><br></pre></td></tr></table></figure></div></li><li><p>if else-if else</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1;<span class="keyword">then</span></span><br><span class="line">    command1</span><br><span class="line"><span class="keyword">elif</span> condition2;<span class="keyword">then</span> </span><br><span class="line">    command2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 例子：</span></span><br></pre></td></tr></table></figure></div><p><strong>for</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 例子：</span></span><br></pre></td></tr></table></figure></div><p><strong>while</strong></p><ul><li><p>while condition</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition <span class="comment">#condition指条件</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">command</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></div></li></ul><ul><li><p>while 无限循环 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">command</span>  <span class="comment">#死循环</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></div></li></ul><p><strong>case</strong></p><p>Shell case语句为多选择语句。可以用case语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。<br>case需要一个esac（就是case反过来）作为结束标记，每个case分支用右圆括号，用两个分号表示break，其中“;;”不是跳出循环，是不在去匹配下面的模式<br>case语句格式如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 值 <span class="keyword">in</span></span><br><span class="line">  模式1)</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">    ;;</span><br><span class="line">  模式2）</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="comment">#例子  自己做菜单用</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="function"><span class="title">menu</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###############- - - -Menu- - - ####################"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1.一键安装MySQLmariadb-10.2.29-linux-x86_64"</span>       </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2.源码安装apache"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"3.源码安装php"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"4."</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"5."</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0.退出当前脚本"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###################################################"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_source_apache</span></span> ()&#123;</span><br><span class="line">中间部分脚本命令</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">menu </span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please choice a menu [1-9]: "</span> select</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$select</span> <span class="keyword">in</span></span><br><span class="line">1) install_mysql</span><br><span class="line">   ;;</span><br><span class="line">2) install_source_apache</span><br><span class="line">;;</span><br><span class="line">3) install_source_php</span><br><span class="line">;;</span><br><span class="line">4) </span><br><span class="line">;;</span><br><span class="line">5) </span><br><span class="line">;;</span><br><span class="line">0) <span class="built_in">break</span> </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">   <span class="built_in">echo</span> Sorry!</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></div><p><strong>跳出循环</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">break</span> ：跳出总循环</span><br><span class="line"></span><br><span class="line"><span class="built_in">continue</span>：跳出当前循环，继续下一次循环</span><br></pre></td></tr></table></figure></div><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>可以带function fun() 定义，也可以直接fun() 定义,不带任何参数。</p><ul><li><strong>函数定义</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="keyword">function</span> ] funname()</span><br><span class="line">&#123;</span><br><span class="line">    action;</span><br><span class="line">    [<span class="built_in">return</span> int;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><p><strong>参数传递</strong></p><ul><li>调用函数: fun_name 2 3 4</li></ul><ul><li>函数中使用：和shell取用函数相同 $n $# $* $? 或者加上{}</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">funWithParam</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"第一个参数为 <span class="variable">$1</span> !"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"第二个参数为 <span class="variable">$2</span> !"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"第十个参数为 <span class="variable">$10</span> !"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"第十个参数为 <span class="variable">$&#123;10&#125;</span> !"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"第十一个参数为 <span class="variable">$&#123;11&#125;</span> !"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"参数总数有 <span class="variable">$#</span> 个!"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"作为一个字符串输出所有参数 $* !"</span>&#125;</span><br><span class="line">funWithParam 1 2 3 4 5 6 7 8 9 34 73</span><br><span class="line"><span class="built_in">echo</span> $?  \<span class="comment"># 判断执行是否成功</span></span><br></pre></td></tr></table></figure></div><p>​    </p></li><li><p><strong>函数返回值</strong></p><ul><li><p>return字样可存在也可不存在</p></li><li><p>return 只能为 return [0-255]，此处的返回可作为函数执行的状态，通过$?获取的便是这个返回值</p></li><li><p>如果不加return ， 则默认最后一条语句的执行状态所为函数执行状态的返回值，如果最后一条语句执行成功，则$?为0，否则不为0</p></li></ul></li></ul><ul><li><strong>使用函数返回值</strong>（Janusgraph图数据库官方启动服务脚本片段）<ul><li>return返回的数字，只是作为函数执行状态的返回值，也就是接下来$?获取的值</li><li>对于类似于下面的<code>BIN=\</code>abs_path``语句，获取的是函数体内所有的echo、printf输出组合成的一个字符串</li></ul></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">abs_path</span></span>() &#123;</span><br><span class="line">    SOURCE=<span class="string">"<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>"</span></span><br><span class="line">    <span class="keyword">while</span> [ -h <span class="string">"<span class="variable">$SOURCE</span>"</span> ]; <span class="keyword">do</span></span><br><span class="line">        DIR=<span class="string">"<span class="variable">$( cd -P "$( dirname "$SOURCE" )</span>"</span> &amp;&amp; <span class="built_in">pwd</span> )<span class="string">"</span></span><br><span class="line"><span class="string">        SOURCE="</span>$(readlink <span class="string">"<span class="variable">$SOURCE</span>"</span>)<span class="string">"</span></span><br><span class="line"><span class="string">        [[ <span class="variable">$SOURCE</span> != /* ]] &amp;&amp; SOURCE="</span><span class="variable">$DIR</span>/<span class="variable">$SOURCE</span><span class="string">"</span></span><br><span class="line"><span class="string">    done</span></span><br><span class="line"><span class="string">    echo "</span><span class="built_in">test</span><span class="string">"  </span></span><br><span class="line"><span class="string">    echo "</span>$( <span class="built_in">cd</span> -P <span class="string">"<span class="variable">$( dirname "$SOURCE" )</span>"</span> &amp;&amp; <span class="built_in">pwd</span> )<span class="string">"  </span></span><br><span class="line"><span class="string">    # 此函数的两个echo输出会组合成一个字符串作为下述BIN的值</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">BIN=`abs_path` # BIN赋值函数返回值，如果没有return，则函数中所有的echo、printf输出组合成一个字符串传入BIN</span></span><br><span class="line"><span class="string">path=<span class="variable">$&#123;BIN&#125;</span>/nodetool # 可直接使用</span></span><br></pre></td></tr></table></figure></div><h3 id="颜色标识"><a href="#颜色标识" class="headerlink" title="颜色标识"></a>颜色标识</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>  <span class="string">"\033[32m SUCCESS \033[0m\n"</span></span><br><span class="line"><span class="built_in">printf</span>  <span class="string">"\033[33m WARNING \033[0m\n"</span></span><br><span class="line"><span class="built_in">printf</span>  <span class="string">"\033[31m ERROR \033[0m\n"</span></span><br></pre></td></tr></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20191229120438586.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191229120438586.png" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;﻿## Shell&lt;/p&gt;
&lt;p&gt;#在此感谢WEB洋仔&lt;/p&gt;
&lt;h2 id=&quot;shell脚本？&quot;&gt;&lt;a href=&quot;#shell脚本？&quot; class=&quot;headerlink&quot; title=&quot;shell脚本？&quot;&gt;&lt;/a&gt;shell脚本？&lt;/h2&gt;&lt;p&gt;在说什么是shell脚
      
    
    </summary>
    
    
      <category term="shell编程" scheme="https://caohziming.net/categories/shell%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="shell" scheme="https://caohziming.net/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 实战性调整优化</title>
    <link href="https://caohziming.net/post/25329.html"/>
    <id>https://caohziming.net/post/25329.html</id>
    <published>2019-12-28T02:55:45.000Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-实战性调整优化"><a href="#Ubuntu-实战性调整优化" class="headerlink" title="Ubuntu 实战性调整优化"></a>Ubuntu 实战性调整优化</h1><h2 id="1：修改软件仓库："><a href="#1：修改软件仓库：" class="headerlink" title="1：修改软件仓库："></a>1：修改软件仓库：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">阿⾥云仓库地址：https://developer.aliyun.com/mirror <span class="comment"># 修改此仓库，参看网站介绍。</span></span><br><span class="line">手动vim /etc/apt/sources.list 清空 替换相应版本的配置。执行apt update更新仓库</span><br><span class="line">中科⼤：http://mirrors.ustc.edu.cn/<span class="built_in">help</span>/ubuntu.html</span><br><span class="line">清华⼤学：https://mirror.tuna.tsinghua.edu.cn/<span class="built_in">help</span>/ubuntu/</span><br><span class="line">华为：https://mirrors.huaweicloud.com/</span><br></pre></td></tr></table></figure></div><h2 id="2：apt-apt-get："><a href="#2：apt-apt-get：" class="headerlink" title="2：apt/apt-get："></a>2：apt/apt-get：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt list #apt列出仓库软件包，等于yum list</span></span><br><span class="line"><span class="comment"># apt search NAME #搜索安装包</span></span><br><span class="line"><span class="comment"># apt show apache2 #查看某个安装包的详细信息</span></span><br><span class="line"><span class="comment"># apt install apache2 #在线安装软件包</span></span><br><span class="line"><span class="comment"># apt remove apache2 #卸载单个软件包但是保留配置⽂件</span></span><br><span class="line"><span class="comment"># apt autoremove apache2 #删除安装包并解决依赖关系</span></span><br><span class="line"><span class="comment"># apt update #更新本地软件包列表索引，修改了apt仓库后必须执⾏</span></span><br><span class="line"><span class="comment"># apt purge apache2 #卸载单个软件包删除配置⽂件</span></span><br><span class="line"><span class="comment"># apt upgrade #升级所有已安装且可升级到新版本的软件包</span></span><br><span class="line"><span class="comment"># apt full-upgrade #升级整个系统，必要时可以移除旧软件包。</span></span><br><span class="line"><span class="comment"># apt edit-sources #编辑source源⽂件</span></span><br><span class="line"><span class="comment"># apt-cache madison nginx #查看仓库中软件包有哪些版本可以安装</span></span><br><span class="line"><span class="comment"># apt install nginx=1.14.0-0ubuntu1.6 #安装软件包的时候指定安装具体的版本</span></span><br></pre></td></tr></table></figure></div><h2 id="3-系统资源限制优化："><a href="#3-系统资源限制优化：" class="headerlink" title="3. 系统资源限制优化："></a>3. 系统资源限制优化：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cat /etc/security/limits.conf # 复制到文章内容最下方</span></span><br><span class="line"><span class="comment">#root账⼾的资源软限制和硬限制</span></span><br><span class="line">root soft core unlimited</span><br><span class="line">root hard core unlimited</span><br><span class="line">root soft nproc 1000000</span><br><span class="line">root hard nproc 1000000</span><br><span class="line">root soft nofile 1000000</span><br><span class="line">root hard nofile 1000000</span><br><span class="line">root soft memlock 32000</span><br><span class="line">root hard memlock 32000</span><br><span class="line">root soft msgqueue 8192000</span><br><span class="line">root hard msgqueue 8192000</span><br><span class="line"><span class="comment">#其他账⼾的资源软限制和硬限制</span></span><br><span class="line">* soft core unlimited</span><br><span class="line">* hard core unlimited</span><br><span class="line">* soft nproc 1000000</span><br><span class="line">* hard nproc 1000000</span><br><span class="line">* soft nofile  1000000</span><br><span class="line">* hard nofile   1000000</span><br><span class="line">* soft memlock  32000</span><br><span class="line">* hard memlock  32000</span><br><span class="line">* soft msgqueue 8192000</span><br><span class="line">* hard msgqueue 8192000</span><br></pre></td></tr></table></figure></div><h2 id="4-内核参数优化："><a href="#4-内核参数优化：" class="headerlink" title="4. 内核参数优化："></a>4. 内核参数优化：</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysctl.conf <span class="comment">#文章内的全部内容用以下内容覆盖</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # Controls the maximum number of shared memory segments, in pages</span></span><br><span class="line">kernel.shmall = 4294967296</span><br><span class="line"><span class="comment"># TCP kernel paramater</span></span><br><span class="line">net.ipv4.tcp_mem = 786432 1048576 1572864</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 4194304</span><br><span class="line">net.ipv4.tcp_wmem = 4096 16384 4194304</span><br><span class="line">net.ipv4.tcp_window_scaling = 1</span><br><span class="line">net.ipv4.tcp_sack = 1</span><br><span class="line"><span class="comment"># socket buffer</span></span><br><span class="line">net.core.wmem_default = 8388608</span><br><span class="line">net.core.rmem_default = 8388608</span><br><span class="line">net.core.rmem_max = 16777216</span><br><span class="line">net.core.wmem_max = 16777216</span><br><span class="line">net.core.netdev_max_backlog = 262144</span><br><span class="line">net.core.somaxconn = 20480</span><br><span class="line">net.core.optmem_max = 81920</span><br><span class="line"><span class="comment"># TCP conn</span></span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 262144</span><br><span class="line">net.ipv4.tcp_syn_retries = 3</span><br><span class="line">net.ipv4.tcp_retries1 = 3</span><br><span class="line">net.ipv4.tcp_retries2 = 15</span><br><span class="line"><span class="comment"># tcp conn reuse</span></span><br><span class="line">net.ipv4.tcp_timestamps = 0</span><br><span class="line">net.ipv4.tcp_tw_reuse = 0</span><br><span class="line">net.ipv4.tcp_tw_recycle = 0</span><br><span class="line">net.ipv4.tcp_fin_timeout = 1</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 20000</span><br><span class="line">net.ipv4.tcp_max_orphans = 3276800</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"><span class="comment"># keepalive conn</span></span><br><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 30</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br><span class="line">net.ipv4.ip_local_port_range = 10001 65000</span><br><span class="line"><span class="comment"># swap</span></span><br><span class="line">vm.overcommit_memory = 0</span><br><span class="line">vm.swappiness = 10</span><br><span class="line"><span class="comment">#net.ipv4.conf.eth1.rp_filter = 0</span></span><br><span class="line"><span class="comment">#net.ipv4.conf.lo.arp_ignore = 1</span></span><br><span class="line"><span class="comment">#net.ipv4.conf.lo.arp_announce = 2</span></span><br><span class="line"><span class="comment">#net.ipv4.conf.all.arp_ignore = 1</span></span><br><span class="line"><span class="comment">#net.ipv4.conf.all.arp_announce = 2</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu-实战性调整优化&quot;&gt;&lt;a href=&quot;#Ubuntu-实战性调整优化&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 实战性调整优化&quot;&gt;&lt;/a&gt;Ubuntu 实战性调整优化&lt;/h1&gt;&lt;h2 id=&quot;1：修改软件仓库：&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://caohziming.net/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="https://caohziming.net/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>lamp.sh</title>
    <link href="https://caohziming.net/post/43351.html"/>
    <id>https://caohziming.net/post/43351.html</id>
    <published>2019-12-28T02:55:45.000Z</published>
    <updated>2019-12-30T00:19:43.476Z</updated>
    
    <content type="html"><![CDATA[<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="function"><span class="title">menu</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###############- - - -Menu- - - ####################"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1.一键安装MySQLmariadb-10.2.29-linux-x86_64"</span>       </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2.源码安装apache"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"3.源码安装php"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"4."</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"5."</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0.退出当前脚本"</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###################################################"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#一键安装MySQLmariadb-10.2.29-linux-x86_64</span></span><br><span class="line"><span class="function"><span class="title">install_mysql</span></span> ()&#123;</span><br><span class="line"></span><br><span class="line">DIR=`<span class="built_in">pwd</span>`</span><br><span class="line">NAME=<span class="string">"mariadb-10.2.29-linux-x86_64.tar.gz"</span></span><br><span class="line">FULL_NAME=<span class="variable">$&#123;DIR&#125;</span>/<span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">DATA_DIR=<span class="string">"/data/mysql"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;FULL_NAME&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"安装文件存在"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"安装文件不存在"</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -h /usr/<span class="built_in">local</span>/mysql ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Mysql 已经安装"</span></span><br><span class="line">    <span class="built_in">exit</span> 3 </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    tar xvf <span class="variable">$&#123;FULL_NAME&#125;</span>   -C /usr/<span class="built_in">local</span>/</span><br><span class="line">    <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">    ln -sv mariadb-10.2.29-linux-x86_64 mysql</span><br><span class="line">    <span class="keyword">if</span> id  mysql;<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"mysql 用户已经存在，跳过创建用户过程"</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        useradd -r  -s /sbin/nologin mysql</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>  id  mysql;<span class="keyword">then</span></span><br><span class="line">    chown  -R mysql.mysql  /usr/<span class="built_in">local</span>/mysql/</span><br><span class="line">        <span class="keyword">if</span> [ ! -d  /data/mysql ];<span class="keyword">then</span></span><br><span class="line">            mkdir -pv /data/mysql &amp;&amp; chown  -R mysql.mysql  /data   -R</span><br><span class="line">            /usr/<span class="built_in">local</span>/mysql/scripts/mysql_install_db  --user=mysql --datadir=/data/mysql  </span><br><span class="line">    cp  /usr/<span class="built_in">local</span>/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">    chmod a+x /etc/init.d/mysqld</span><br><span class="line">    cp <span class="variable">$&#123;DIR&#125;</span>/my.cnf   /etc/my.cnf</span><br><span class="line">    ln -sv /usr/<span class="built_in">local</span>/mysql/bin/mysql  /usr/bin/mysql</span><br><span class="line">    ln -sv /usr/lib64/libncurses.so.6  /usr/lib64/libncurses.so.5</span><br><span class="line">    /etc/init.d/mysqld start</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"MySQL数据目录已经存在,"</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'PATH=/usr/local/mysql/bin:$PATH'</span> &gt; /etc/profile.d/mysql.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"安装完成，如需安全设置请执行/usr/local/mysql/bin/mysql_secure_installation"</span></span><br><span class="line">sleep 5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装apache</span></span><br><span class="line"><span class="function"><span class="title">install_source_apache</span></span> ()&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###########准备所需的包组###############"</span></span><br><span class="line">yum groupinstall -y <span class="string">"Development tools"</span></span><br><span class="line">yum install -y pcre pcre-devel openssl-devel expat-devel <span class="comment">#CentOS7需要此开发包 libxm12-devel</span></span><br><span class="line">yum remove apr -y</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###########准备源码包并校验源码包##############"</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line"><span class="comment">#wget https://www-us.apache.org/dist//httpd/httpd-2.4.39.tar.bz2</span></span><br><span class="line"><span class="comment">#wget https://www-us.apache.org/dist//apr/apr-1.7.0.tar.bz2</span></span><br><span class="line"><span class="comment">#wget https://www-us.apache.org/dist//apr/apr-util-1.6.1.tar.bz2</span></span><br><span class="line"><span class="comment">#wget https://www.php.net/distributions/php-7.3.13.tar.bz2</span></span><br><span class="line">md5sum httpd-2.4.39.tar.bz2 apr-util-1.6.1.tar.bz2 apr-1.7.0.tar.bz2</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"校验成功"</span> || (<span class="built_in">echo</span> <span class="string">"校验失败，请检查"</span> &amp;&amp; <span class="built_in">exit</span> 1)</span><br><span class="line">sleep 2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"##########准备解压源码包###############"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls *.bz2`;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"解压 <span class="variable">$i</span> 中...."</span></span><br><span class="line">   tar xf <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"解压 <span class="variable">$i</span> 完成...."</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">sleep 2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#########准备编译文件#################"</span></span><br><span class="line">mv apr-1.7.0 httpd-2.4.39/srclib/apr</span><br><span class="line">mv apr-util-1.6.1 httpd-2.4.39/srclib/apr-util</span><br><span class="line"><span class="built_in">cd</span> httpd-2.4.39</span><br><span class="line">./configure --prefix=/app/httpd24 \</span><br><span class="line">--<span class="built_in">enable</span>-so \</span><br><span class="line">--<span class="built_in">enable</span>-ssl \</span><br><span class="line">--<span class="built_in">enable</span>-cgi \</span><br><span class="line">--<span class="built_in">enable</span>-rewrite \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-pcre \</span><br><span class="line">--<span class="built_in">enable</span>-modules=most \</span><br><span class="line">--<span class="built_in">enable</span>-mpms-shared=all \</span><br><span class="line">--with-mpm=prefork \</span><br><span class="line">--with-included-apr</span><br><span class="line">make -j 4 &amp;&amp; make install</span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#########准备PATH变量#################"</span></span><br><span class="line">cat &gt; /etc/profile.d/httpd.sh&lt;&lt;EOF</span><br><span class="line"><span class="built_in">export</span> PATH=/app/httpd24/bin:<span class="variable">$PATH</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#########启动apache###################"</span></span><br><span class="line">cp /app/httpd24/bin/apachectl /etc/init.d/httpd </span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start httpd</span><br><span class="line">ss -ntl |grep <span class="string">":80\&gt;"</span> &gt; /dev/null</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"apache启动成功"</span> || (<span class="built_in">echo</span> <span class="string">"apache启动失败"</span> &amp;&amp; <span class="built_in">exit</span> 1)</span><br><span class="line">sleep 5</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装PHP 7.1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_source_php</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###########准备所需的包组###############"</span></span><br><span class="line">yum groupinstall -y <span class="string">"Development tools"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"###########准备源码包并校验源码包##############"</span></span><br><span class="line">      <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">      md5sum php-7.3.13.tar.bz2</span><br><span class="line">      [ $? -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"校验成功"</span> || (<span class="built_in">echo</span> <span class="string">"校验失败，请检查"</span> &amp;&amp; <span class="built_in">exit</span> 1)</span><br><span class="line">       sleep 2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"##########准备解压源码包###############"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls *.bz2`;<span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"解压 <span class="variable">$i</span> 中...."</span></span><br><span class="line">   tar xf <span class="variable">$i</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"解压 <span class="variable">$i</span> 完成...."</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"########准备编译PHP########"</span></span><br><span class="line">        sleep 2</span><br><span class="line">    yum -y install libxml2-devel bzip2-devel libmcrypt-devel libicu-devel libxslt-devel openssl-devel</span><br><span class="line">    <span class="built_in">cd</span> php-7.3.13/</span><br><span class="line">./configure --prefix=/app/php73 \</span><br><span class="line">--<span class="built_in">enable</span>-mysqlnd \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-pdo-mysql=mysqlnd \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-freetype-dir \</span><br><span class="line">--with-jpeg-dir \</span><br><span class="line">--with-png-dir \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-libxml-dir=/usr \</span><br><span class="line">--with-config-file-path=/etc \</span><br><span class="line">--with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">--<span class="built_in">enable</span>-mbstring \</span><br><span class="line">--<span class="built_in">enable</span>-xml \</span><br><span class="line">--<span class="built_in">enable</span>-sockets \</span><br><span class="line">--<span class="built_in">enable</span>-fpm \</span><br><span class="line">--<span class="built_in">enable</span>-maintainer-zts \</span><br><span class="line">--<span class="built_in">disable</span>-fileinfo</span><br><span class="line">make -j 4 &amp;&amp; make install</span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"############复制php.ini###############"</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/php-7.3.13/</span><br><span class="line">cp php.ini-production /etc/php.ini</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"复制完成============="</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"##########准备相关配置文件############"</span></span><br><span class="line"><span class="built_in">cd</span> /app/php73/etc</span><br><span class="line">cp /app/php73/etc/php-fpm.conf.default php-fpm.conf</span><br><span class="line">cp /app/php73/etc/php-fpm.d/www.conf.default php-fpm.d/www.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"配置文件完成============"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"##########准备启动脚本################"</span></span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/php-7.3.13/sapi/fpm/php-fpm.service /usr/lib/systemd/system/ </span><br><span class="line">systemctl start php-fpm.service</span><br><span class="line">    <span class="comment">#cp /usr/local/src/php-7.3.13/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span></span><br><span class="line"><span class="comment">#chmod +x /etc/init.d/php-fpm</span></span><br><span class="line"><span class="comment">#chkconfig --add php-fpm</span></span><br><span class="line"><span class="comment">#chkconfig php-fpm on</span></span><br><span class="line"><span class="comment">#service php-fpm start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"启动脚本完成============="</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"##########配置httpd支持php############"</span></span><br><span class="line">sed -i <span class="string">'/#LoadModule proxy_module modules/mod_proxy.so/LoadModule proxy_module modules/mod_proxy.so/'</span> /app/httpd24/conf/httpd.conf</span><br><span class="line">sed -i <span class="string">'/#LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so/LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so/'</span> /app/httpd24/httpd24/conf/httpd.conf</span><br><span class="line">sed -i <span class="string">'s#DirectoryIndex index.html#DirectoryIndex index.php index.html#'</span> /app/httpd24/conf/httpd.conf</span><br><span class="line">sed -i <span class="string">'/AddType application\/x-gzip .gz .tgz/a\    AddType application/x-httpd-php .php\n    AddType application/x-httpd-php-source .phps '</span> /app/httpd24/conf/httpd.conf</span><br><span class="line">systemctl restart httpd</span><br><span class="line">[ $? -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"apache启动成功。"</span> || (<span class="built_in">echo</span> <span class="string">"apache启动失败"</span> &amp;&amp; <span class="built_in">exit</span> 1)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">menu </span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"please choice a menu [1-9]: "</span> select</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$select</span> <span class="keyword">in</span></span><br><span class="line">1) install_mysql</span><br><span class="line">   ;;</span><br><span class="line">2) install_source_apache</span><br><span class="line">;;</span><br><span class="line">3) install_source_php</span><br><span class="line">;;</span><br><span class="line">4) </span><br><span class="line">;;</span><br><span class="line">5) </span><br><span class="line">;;</span><br><span class="line">0) <span class="built_in">break</span> </span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">   <span class="built_in">echo</span> Sorry!</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;code-area-wrap&quot;&gt;&lt;div class=&quot;highlight-tools&quot;&gt;&lt;i class=&quot;fa fa-angle-down code-expand&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;div class=&quot;code_lan
      
    
    </summary>
    
    
      <category term="lamp" scheme="https://caohziming.net/categories/lamp/"/>
    
    
      <category term="lamp" scheme="https://caohziming.net/tags/lamp/"/>
    
  </entry>
  
  <entry>
    <title>MySQL之索引INDEX</title>
    <link href="https://caohziming.net/post/54482.html"/>
    <id>https://caohziming.net/post/54482.html</id>
    <published>2019-12-24T02:29:22.312Z</published>
    <updated>2019-12-29T11:41:52.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-索引介绍"><a href="#1-索引介绍" class="headerlink" title="1.索引介绍"></a>1.索引介绍</h2><pre><code>索引：是排序的快速查找的特殊数据结构，定义作为查找条件的字段上，又称为key，索引通过存储引擎实现优点：    索引可以降低服务需要扫描的数据量，减少了IO次数    索引可以帮助服务器避免排序和使用临时表    索引可以帮助将随机I/O转为顺序I/O缺点：    占用额外空间，影响插入速度</code></pre><h3 id="1-1-索引类型"><a href="#1-1-索引类型" class="headerlink" title="1.1 索引类型"></a>1.1 索引类型</h3><ul><li>B+ TREE、HASH、R TREE、FULLTEXT</li><li>聚簇（集）索引、非聚簇索引：数据和索引是否存储在一起</li><li>主键索引、二级（辅助）索引</li><li>稠密索引、稀疏索引：是否索引了每一个数据项</li><li>简单索引、组合索引</li><li>左前缀索引：取前面的字符做索引</li><li>覆盖索引：从索引中即可取出要查询的数据，性能高<h3 id="1-2-索引分类"><a href="#1-2-索引分类" class="headerlink" title="1.2 索引分类"></a>1.2 索引分类</h3><ul><li>普通索引index :加速查找<br>通过<code>ALTER TABLE table_name ADD INDEX index_name (column);</code>创建普通索引</li><li>唯一索引<ul><li>主键索引：primary key ：加速查找+约束（不为空且唯一）</li><li>唯一索引：unique：加速查找+约束 （唯一）</li></ul></li><li>联合索引</li><li>primary key(id,name):联合主键索引</li><li>unique(id,name):联合唯一索引</li><li>index(id,name):联合普通索引<br>通过<code>ALTER TABLE table_name ADD INDEX index_name(column1,column2, column3);</code>创建组合索引</li></ul></li><li>全文索引fulltext :在文本中查找关键词，而不是直接比较索引中的值，类似搜索引擎，用于搜索很长一篇文章的时候，效果最好。<h3 id="1-3-索引结构"><a href="#1-3-索引结构" class="headerlink" title="1.3 索引结构"></a>1.3 索引结构</h3><h4 id="1-3-1-二叉树"><a href="#1-3-1-二叉树" class="headerlink" title="1.3.1 二叉树"></a>1.3.1 二叉树</h4><a href="https://img-blog.csdnimg.cn/20191126130318940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126130318940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a>          <ul><li><strong>树叶节点存储数据</strong></li><li><strong>根节点，树枝节点不存储数据，只存储索引</strong><h4 id="1-3-2-B-Tree-索引"><a href="#1-3-2-B-Tree-索引" class="headerlink" title="1.3.2 B-Tree 索引"></a>1.3.2 B-Tree 索引</h4></li><li><strong>B-TREE 每个节点都是一个二元数组: [key, data]，所有节点都可以存储数据。key为索引key,data为除key之外的数据</strong></li><li><strong>首先从根节点进行二分查找，如果找到则返回对应节点的data，否则对相应区间的指针指向的节点递归进行查找，直到找到节点或未找到节点返回null指针。</strong></li></ul></li></ul><p><a href="https://img-blog.csdnimg.cn/20191126131248992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126131248992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><h4 id="1-3-3-B-Tree"><a href="#1-3-3-B-Tree" class="headerlink" title="1.3.3 B+Tree"></a>1.3.3 B+Tree</h4><p><a href="https://img-blog.csdnimg.cn/20191126130648962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126130648962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><ul><li><strong>B+Tree索引：按顺序存储，每一个叶子节点到根结点的距离是相同的；左前缀索引，适合查询范围类的数据</strong></li><li><strong>可以使用B+Tree索引的查询类型：</strong><br>  全值匹配：精确所有索引列，如：姓wang，名xiaochun，年龄30<br>  匹配最左前缀：即只使用索引的第一列，如：姓wang<br>  匹配列前缀：只匹配一列值开头部分，如：姓以w开头的<br>  匹配范围值：如：姓ma和姓wang之间<br>  精确匹配某一列并范围匹配另一列：如：姓wang,名以x开头的<br>  只访问索引的查询</li><li><strong>B+Tree索引的限制：</strong><br>如不从最左列开始，则无法使用索引，如：查找名为xiaochun，或姓为g结尾<br>不能跳过索引中的列：如：查找姓wang，年龄30的，只能使用索引第一列<br>特别提示：<br>索引列的顺序和查询语句的写法应相匹配，才能更好的利用索引<br>为优化性能，可能需要针对相同的列但顺序不同创建不同的索引来满足不同类型的查询需求</li></ul><h4 id="1-3-4-全文索引-FULLTEXT"><a href="#1-3-4-全文索引-FULLTEXT" class="headerlink" title="1.3.4 全文索引(FULLTEXT)"></a>1.3.4 全文索引(FULLTEXT)</h4><p>在文本中查找关键词，而不是直接比较索引中的值，类似搜索引擎<br>InnoDB从MySQL 5.6之后也开始支持</p><h4 id="1-3-5-聚簇和非聚簇索引，主键和二级索引"><a href="#1-3-5-聚簇和非聚簇索引，主键和二级索引" class="headerlink" title="1.3.5 聚簇和非聚簇索引，主键和二级索引"></a>1.3.5 聚簇和非聚簇索引，主键和二级索引</h4><p><a href="https://img-blog.csdnimg.cn/20191126132027945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126132027945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><h4 id="1-3-6-冗余和重复索引"><a href="#1-3-6-冗余和重复索引" class="headerlink" title="1.3.6 冗余和重复索引"></a>1.3.6 冗余和重复索引</h4><p>冗余索引：（A），（A，B）<br>重复索引：已经有索引，再次建立索引</p><h3 id="1-4-索引优化"><a href="#1-4-索引优化" class="headerlink" title="1.4 索引优化"></a>1.4 索引优化</h3><h4 id="1-4-1-索引优化使用"><a href="#1-4-1-索引优化使用" class="headerlink" title="1.4.1 索引优化使用"></a>1.4.1 索引优化使用</h4><ul><li>独立地使用列：尽量避免其参与运算，独立的列指索引列不能是表达式的一部分，也不能是函数的参数，在where条件中，始终将索引列单独放在比较符号的一侧</li><li>左前缀索引：构建指定索引字段的左侧的字符数，要通过索引选择性来评估</li><li>索引选择性：不重复的索引值和数据表的记录总数的比值</li><li>多列索引：AND操作时更适合使用多列索引，而非为每个列创建单独的索引</li><li>选择合适的索引列顺序：无排序和分组时，将选择性最高放左侧<h4 id="1-4-2-索引优化建议"><a href="#1-4-2-索引优化建议" class="headerlink" title="1.4.2 索引优化建议"></a>1.4.2 索引优化建议</h4><ul><li>只要列中含有NULL值，就最好不要在此列设置索引，复合索引如果有NULL值，此列在使用时也不会使用索引<ul><li>尽量使用短索引，如果可以，应该制定一个前缀长度</li><li>对于经常在where子句使用的列，最好设置索引</li><li>对于有多个列where或者order by子句，应该建立复合索引</li><li>对于like语句，以%或者‘-’开头的不会使用索引，以%结尾会使用索引</li><li>尽量不要在列上进行运算（函数操作和表达式操作）</li><li>尽量不要使用not in和&lt;&gt;操作<h4 id="1-4-3-SQL语句性能优化"><a href="#1-4-3-SQL语句性能优化" class="headerlink" title="1.4.3 SQL语句性能优化"></a>1.4.3 SQL语句性能优化</h4></li></ul></li></ul></li><li>查询时，能不要<em>就不用</em>，尽量写全字段名</li><li>大部分情况连接效率远大于子查询</li><li>多表连接时，尽量小表驱动大表，即小表 join 大表</li><li>在有大量记录的表分页时使用limit</li><li>对于经常使用的查询，可以开启缓存</li><li>多使用explain和profile分析查询语句</li><li>查看慢查询日志，找出执行时间长的sql语句优化<h3 id="1-5-管理索引"><a href="#1-5-管理索引" class="headerlink" title="1.5 管理索引"></a>1.5 管理索引</h3><h4 id="1-5-1-创建索引"><a href="#1-5-1-创建索引" class="headerlink" title="1.5.1 创建索引"></a>1.5.1 创建索引</h4></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE [UNIQUE] INDEX index_name ON tbl_name (index_col_name[(length)],...);</span><br><span class="line">ALTER TABLE tbl_name ADD INDEX index_name(index_col_name);</span><br><span class="line"><span class="built_in">help</span> CREATE INDEX;</span><br></pre></td></tr></table></figure></div><h4 id="1-5-2-删除索引"><a href="#1-5-2-删除索引" class="headerlink" title="1.5.2 删除索引"></a>1.5.2 删除索引</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP INDEX index_name ON tbl_name;</span><br><span class="line">ALTER TABLE tbl_name DROP INDEX index_name(index_col_name);</span><br></pre></td></tr></table></figure></div><h4 id="1-5-3-查看索引"><a href="#1-5-3-查看索引" class="headerlink" title="1.5.3 查看索引"></a>1.5.3 查看索引</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW INDEXES FROM [db_name.]tbl_name;</span><br></pre></td></tr></table></figure></div><h4 id="1-5-4-优化表空间"><a href="#1-5-4-优化表空间" class="headerlink" title="1.5.4 优化表空间"></a>1.5.4 优化表空间</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OPTIMIZE TABLE tb_name;</span><br></pre></td></tr></table></figure></div><h4 id="1-5-5-查看索引的使用"><a href="#1-5-5-查看索引的使用" class="headerlink" title="1.5.5 查看索引的使用"></a>1.5.5 查看索引的使用</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL userstat=1;</span><br><span class="line">SHOW INDEX_STATISTICS;</span><br></pre></td></tr></table></figure></div><h4 id="1-5-6-EXPLAIN-工具"><a href="#1-5-6-EXPLAIN-工具" class="headerlink" title="1.5.6 EXPLAIN 工具"></a>1.5.6 EXPLAIN 工具</h4><p> <strong>功能：可以通过EXPLAIN来分析索引的有效性,获取查询执行计划信息，用来查看查询优化器如何执行查询</strong><br> 语法：<code>EXPLAIN SELECT clause</code><br><strong>参考资料： <a href="https://dev.mysql.com/doc/refman/5.7/en/explain-output.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/explain-output.html</a></strong><br><a href="https://img-blog.csdnimg.cn/20191126133833645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126133833645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a><br><a href="https://img-blog.csdnimg.cn/20191126133911318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191126133911318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM0MTUwNw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-索引介绍&quot;&gt;&lt;a href=&quot;#1-索引介绍&quot; class=&quot;headerlink&quot; title=&quot;1.索引介绍&quot;&gt;&lt;/a&gt;1.索引介绍&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;索引：是排序的快速查找的特殊数据结构，定义作为查找条件的字段上，又称为key，索引通过存储引
      
    
    </summary>
    
    
      <category term="MySQL" scheme="https://caohziming.net/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://caohziming.net/tags/MySQL/"/>
    
  </entry>
  
</feed>
